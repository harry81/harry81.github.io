<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>물개발자</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2017-11-18T12:15:00+09:00</updated><entry><title>let's get it done</title><link href="/lets-get-it-done.html" rel="alternate"></link><published>2017-11-18T12:15:00+09:00</published><updated>2017-11-18T12:15:00+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-11-18:/lets-get-it-done.html</id><summary type="html">&lt;h5&gt;그 동안 작동하는 프로젝트를 만들어 내지 못한 이유는?&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;전체적인 그림을 그리지 못했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;실제 구현에 필요한 일부 기술에 부딪힐 때마다 그 기술을 익여햐 하겠다는 생각에 집중했다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;기술정리를 위한 정적 블로그&lt;/li&gt;
&lt;li&gt;머신러닝&lt;/li&gt;
&lt;li&gt;pandas &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;꾸준하게 개발에 대한 의지와 열정을 유지하지 못 했다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;그렇다면 작동하는 프로젝트를 완료하기 위한 나의 노력은 무엇인가?&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;그림을 그려보자.&lt;/li&gt;
&lt;li&gt;새로운 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h5&gt;그 동안 작동하는 프로젝트를 만들어 내지 못한 이유는?&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;전체적인 그림을 그리지 못했다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;실제 구현에 필요한 일부 기술에 부딪힐 때마다 그 기술을 익여햐 하겠다는 생각에 집중했다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;기술정리를 위한 정적 블로그&lt;/li&gt;
&lt;li&gt;머신러닝&lt;/li&gt;
&lt;li&gt;pandas &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;꾸준하게 개발에 대한 의지와 열정을 유지하지 못 했다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;그렇다면 작동하는 프로젝트를 완료하기 위한 나의 노력은 무엇인가?&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;그림을 그려보자.&lt;/li&gt;
&lt;li&gt;새로운 기술을 만난 경우&lt;ul&gt;
&lt;li&gt;1&lt;/li&gt;
&lt;li&gt;2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;의지와 열정을 꾸준히&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>microservice</title><link href="/microservice.html" rel="alternate"></link><published>2017-11-04T13:09:00+09:00</published><updated>2017-11-04T13:09:00+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-11-04:/microservice.html</id><summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align="center"&gt;Mircoservice&lt;/th&gt;
&lt;th align="right"&gt;Monolithics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;테스트&lt;/td&gt;
&lt;td align="center"&gt;어려움&lt;/td&gt;
&lt;td align="right"&gt;쉬움&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;디버깅&lt;/td&gt;
&lt;td align="center"&gt;어려움&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;배포&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="right"&gt;단순&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;모니터링&lt;/td&gt;
&lt;td align="center"&gt;중요&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;개발&lt;/td&gt;
&lt;td align="center"&gt;문제에 집중해 개발 가능&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;유연함&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;언어 자유도&lt;/td&gt;
&lt;td align="center"&gt;높음&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;독립성&lt;/td&gt;
&lt;td align="center"&gt;높음&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="http://www.popit.kr/why-microservice/"&gt;마이크로서비스 아키텍처의 장단점&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align="center"&gt;Mircoservice&lt;/th&gt;
&lt;th align="right"&gt;Monolithics&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;테스트&lt;/td&gt;
&lt;td align="center"&gt;어려움&lt;/td&gt;
&lt;td align="right"&gt;쉬움&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;디버깅&lt;/td&gt;
&lt;td align="center"&gt;어려움&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;배포&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="right"&gt;단순&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;모니터링&lt;/td&gt;
&lt;td align="center"&gt;중요&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;개발&lt;/td&gt;
&lt;td align="center"&gt;문제에 집중해 개발 가능&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;유연함&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;언어 자유도&lt;/td&gt;
&lt;td align="center"&gt;높음&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;독립성&lt;/td&gt;
&lt;td align="center"&gt;높음&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a href="http://www.popit.kr/why-microservice/"&gt;마이크로서비스 아키텍처의 장단점&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>자전거 사용추이</title><link href="/bike_timeline.html" rel="alternate"></link><published>2017-10-20T17:37:00+09:00</published><updated>2017-10-20T17:37:00+09:00</updated><author><name>Hyunmin Choi</name></author><id>tag:None,2017-10-20:/bike_timeline.html</id><summary type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;서울 따릉이&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="https://s3.ap-northeast-2.amazonaws.com/hmapps/html/bike_timeline_2017-10-03.html"&gt;서울 따릉이 하루 이용 그림(2mb)&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
</summary><content type="html">&lt;dl class="docutils"&gt;
&lt;dt&gt;서울 따릉이&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="https://s3.ap-northeast-2.amazonaws.com/hmapps/html/bike_timeline_2017-10-03.html"&gt;서울 따릉이 하루 이용 그림(2mb)&lt;/a&gt;&lt;/dd&gt;
&lt;/dl&gt;
</content><category term="bike"></category></entry><entry><title>스마트 워크</title><link href="/smart-work.html" rel="alternate"></link><published>2017-10-11T16:25:00+09:00</published><updated>2017-10-11T16:25:00+09:00</updated><author><name>Hyunmin Choi</name></author><id>tag:None,2017-10-11:/smart-work.html</id><summary type="html">&lt;ul class="simple"&gt;
&lt;li&gt;과정 -&amp;gt; 성과&lt;/li&gt;
&lt;li&gt;시간 -&amp;gt; 업무&lt;/li&gt;
&lt;li&gt;통일성 -&amp;gt; 다양성&lt;/li&gt;
&lt;li&gt;철저한 계획(모든 상황의 변수를 통제) -&amp;gt; 빠른 적응&lt;/li&gt;
&lt;li&gt;지시, 관리 -&amp;gt; 믿음, 지원&lt;/li&gt;
&lt;/ul&gt;
</summary><content type="html">&lt;ul class="simple"&gt;
&lt;li&gt;과정 -&amp;gt; 성과&lt;/li&gt;
&lt;li&gt;시간 -&amp;gt; 업무&lt;/li&gt;
&lt;li&gt;통일성 -&amp;gt; 다양성&lt;/li&gt;
&lt;li&gt;철저한 계획(모든 상황의 변수를 통제) -&amp;gt; 빠른 적응&lt;/li&gt;
&lt;li&gt;지시, 관리 -&amp;gt; 믿음, 지원&lt;/li&gt;
&lt;/ul&gt;
</content></entry><entry><title>생각이 바뀌어야 삶이 바뀐다</title><link href="/life-change-only-if-you-think-different.html" rel="alternate"></link><published>2017-10-10T18:37:00+09:00</published><updated>2017-10-10T18:37:00+09:00</updated><author><name>Hyunmin Choi</name></author><id>tag:None,2017-10-10:/life-change-only-if-you-think-different.html</id><summary type="html">&lt;p&gt;앎의 연대, 집단 지성,&lt;/p&gt;
&lt;p&gt;발표 체험 - 관객 체험&lt;/p&gt;
&lt;p&gt;약자가 하고 싶은게 있다? 권리가 있다?&lt;/p&gt;
&lt;p&gt;질문을 받으면 생각을 하기 시작한다.&lt;/p&gt;
&lt;p&gt;입체적 사고&lt;/p&gt;
&lt;p&gt;HAPPINESS IS NOW HERE&lt;/p&gt;
&lt;p&gt;생각을 내려놓고 감각에 집중하자.&lt;/p&gt;
&lt;p&gt;도파민 vs 스트레스 호르몬&lt;/p&gt;
&lt;p&gt;행복 순간적인 즐거움이 아니라 지속적인 만족감이다.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;앎의 연대, 집단 지성,&lt;/p&gt;
&lt;p&gt;발표 체험 - 관객 체험&lt;/p&gt;
&lt;p&gt;약자가 하고 싶은게 있다? 권리가 있다?&lt;/p&gt;
&lt;p&gt;질문을 받으면 생각을 하기 시작한다.&lt;/p&gt;
&lt;p&gt;입체적 사고&lt;/p&gt;
&lt;p&gt;HAPPINESS IS NOW HERE&lt;/p&gt;
&lt;p&gt;생각을 내려놓고 감각에 집중하자.&lt;/p&gt;
&lt;p&gt;도파민 vs 스트레스 호르몬&lt;/p&gt;
&lt;p&gt;행복 순간적인 즐거움이 아니라 지속적인 만족감이다.&lt;/p&gt;
</content></entry><entry><title>66일 습관의 기적 | 강성태 공신닷컴 대표</title><link href="/66-days-of-habit.html" rel="alternate"></link><published>2017-10-10T11:27:00+09:00</published><updated>2017-10-10T11:27:00+09:00</updated><author><name>Hyunmin Choi</name></author><id>tag:None,2017-10-10:/66-days-of-habit.html</id><summary type="html">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/xiE2wL9hS2w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&amp;quot;공부를 게임처럼 만들자&amp;quot;&lt;/p&gt;
</summary><content type="html">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/xiE2wL9hS2w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;&amp;quot;공부를 게임처럼 만들자&amp;quot;&lt;/p&gt;
</content></entry><entry><title>관점 그리고 생각시작</title><link href="/%EA%B4%80%EC%A0%90%20%EA%B7%B8%EB%A6%AC%EA%B3%A0%20%EC%83%9D%EA%B0%81%EC%8B%9C%EC%9E%91.html" rel="alternate"></link><published>2017-10-01T21:14:00+09:00</published><updated>2017-10-01T21:14:00+09:00</updated><author><name>Hyunmin Choi</name></author><id>tag:None,2017-10-01:/관점 그리고 생각시작.html</id><summary type="html">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/-65c1iRPsXw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;창업자와 직원의 비전은 다를 수 있다&amp;quot;&lt;/p&gt;
&lt;p&gt;&amp;quot;작은 꿈을 이룰 수 있어야 큰 꿈을 이룰수 있지 않을까&amp;quot;&lt;/p&gt;
&lt;p&gt;- 김봉진&lt;/p&gt;
&lt;p&gt;&amp;quot;틀린 질문을 하면 맞는 답이 나오지 않는다&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.yes24.com/24/goods/17701431"&gt;The one thing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;크리스토프 로담 향수 개발자&lt;/p&gt;
&lt;p&gt;가치는 해석에 의해 결정된다.&lt;/p&gt;
&lt;p&gt;&amp;quot;기술을 팔지말고 기술이 바꿀 미래를 팔아라&amp;quot;&lt;/p&gt;
&lt;p&gt;당신은 언제 행복해질 예정이야?&lt;/p&gt;
&lt;!-- raw: html

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/izjBpD-MPOQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt; --&gt;
&lt;p&gt;한가지말에서 만가지 생각을 한다&lt;/p&gt;
&lt;p&gt;익숙한것에 …&lt;/p&gt;</summary><content type="html">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/-65c1iRPsXw" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;창업자와 직원의 비전은 다를 수 있다&amp;quot;&lt;/p&gt;
&lt;p&gt;&amp;quot;작은 꿈을 이룰 수 있어야 큰 꿈을 이룰수 있지 않을까&amp;quot;&lt;/p&gt;
&lt;p&gt;- 김봉진&lt;/p&gt;
&lt;p&gt;&amp;quot;틀린 질문을 하면 맞는 답이 나오지 않는다&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.yes24.com/24/goods/17701431"&gt;The one thing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;크리스토프 로담 향수 개발자&lt;/p&gt;
&lt;p&gt;가치는 해석에 의해 결정된다.&lt;/p&gt;
&lt;p&gt;&amp;quot;기술을 팔지말고 기술이 바꿀 미래를 팔아라&amp;quot;&lt;/p&gt;
&lt;p&gt;당신은 언제 행복해질 예정이야?&lt;/p&gt;
&lt;!-- raw: html

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/izjBpD-MPOQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt; --&gt;
&lt;p&gt;한가지말에서 만가지 생각을 한다&lt;/p&gt;
&lt;p&gt;익숙한것에 대해 다시 질문하라
인생에 대해서 중요한 단어 5개를 찾고 정의하자&lt;/p&gt;
&lt;p&gt;Connect &amp;amp; Development&lt;/p&gt;
&lt;p&gt;재해석&lt;/p&gt;
&lt;p&gt;당연하지 않았던 것들이 당연해지면서 세상은 바뀐다
지금은 당연하지 않지만 미래에 당연해질 일을 찾는 것&lt;/p&gt;
&lt;p&gt;같은걸 다르게 보는 힘&lt;/p&gt;
&lt;p&gt;생각하는 대로 살지 않으면
사는 대로 생각하게 될 것이다. - Paul bourget&lt;/p&gt;
&lt;p&gt;통찰, 관심, 질문, 관점, 관찰, 정의&lt;/p&gt;
</content><category term="세바시"></category></entry><entry><title>믿지말라 그리고 질문하라</title><link href="/%EA%B0%81%20%EC%8B%9C%EB%8C%80%EB%B3%84%20%EC%9D%B8%EA%B8%B0%20%EC%A7%81%EC%97%85.html" rel="alternate"></link><published>2017-10-01T20:49:00+09:00</published><updated>2017-10-01T20:49:00+09:00</updated><author><name>Hyunmin Choi</name></author><id>tag:None,2017-10-01:/각 시대별 인기 직업.html</id><summary type="html">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/x2QMiLa160w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;송길영 다음소프트 부사장&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://news.mk.co.kr/newsRead.php?no=64969&amp;amp;year=2011"&gt;각 시대별 인기 직업&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;무엇을 포기해야 하는가?&lt;/p&gt;
&lt;p&gt;지식의 유효기간
관심의 유효기간&lt;/p&gt;
&lt;p&gt;믿지말라 그리고 질문하라&lt;/p&gt;
</summary><content type="html">&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/x2QMiLa160w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;p&gt;송길영 다음소프트 부사장&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://news.mk.co.kr/newsRead.php?no=64969&amp;amp;year=2011"&gt;각 시대별 인기 직업&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;무엇을 포기해야 하는가?&lt;/p&gt;
&lt;p&gt;지식의 유효기간
관심의 유효기간&lt;/p&gt;
&lt;p&gt;믿지말라 그리고 질문하라&lt;/p&gt;
</content><category term="세바시"></category></entry><entry><title>thought</title><link href="/thought.html" rel="alternate"></link><published>2017-10-01T20:37:00+09:00</published><updated>2017-10-01T20:37:00+09:00</updated><author><name>Hyunmin Choi</name></author><id>tag:None,2017-10-01:/thought.html</id><summary type="html"></summary><content type="html"></content><category term="daily thought"></category><category term="feature"></category><category term="세바시"></category></entry><entry><title>내마음의 구심점</title><link href="/quotes.html" rel="alternate"></link><published>2017-09-30T12:21:00+09:00</published><updated>2017-09-30T12:21:00+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-09-30:/quotes.html</id><summary type="html">&lt;pre class="literal-block"&gt;
가능하면 빨리 실패하라. 실수를 빨리파악하고 인정하는 것이 자신에게 유리하다
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
성공에 남다른 비결이 있는 게 아니라 모두 다 아는 지혜를 실천하기에 달린 것이다.
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
파도를 아닌 파도를 만드는 바람을 보는 세상의 눈이 필요하다.
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
문제를 쫓아 다니면 문제만 쫓아 다닌다. 근본적인 원인을 생각하라.
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
승리는 우리를 흥분시킨다.
하지만 1등을 하지 못했다고 부끄러워할 필요는 절대 …&lt;/pre&gt;</summary><content type="html">&lt;pre class="literal-block"&gt;
가능하면 빨리 실패하라. 실수를 빨리파악하고 인정하는 것이 자신에게 유리하다
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
성공에 남다른 비결이 있는 게 아니라 모두 다 아는 지혜를 실천하기에 달린 것이다.
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
파도를 아닌 파도를 만드는 바람을 보는 세상의 눈이 필요하다.
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
문제를 쫓아 다니면 문제만 쫓아 다닌다. 근본적인 원인을 생각하라.
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
승리는 우리를 흥분시킨다.
하지만 1등을 하지 못했다고 부끄러워할 필요는 절대 없다.
무엇보다 중요한 것은  시도해보는 것이다. [34] - 리차드 브렌슨
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
나는 가슴이 이끄는 대로 살고, 새로운 것에 도전하며, 상상한 것을 실현한다.
내 꿈과 열정에 솔직한 것, 그것이 내 삶이고 경영이다. - 리처드 브랜슨
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
내가 하면 안 되는 올바르고
타당한 이유들은 많았다.

반면에 도전해보겠다고 하는 데는
오직 한 가지 이유밖에 없었다.

도전의 유혹이 너무나 달콤해서
뿌리칠 수 없다는 것뿐이었다.[59] - 리차드 브렌슨
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
어떤 일이 더이상 재미가 없어질 때가 바로 일을 바꿔야 할 시기다. 불행하게 살기에는 인생은 너무 짧다.
- 리차드 브렌슨
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
1) 보여주기 위한 삶이 아닌 내 자신의 삶을 살 걸
2) 일을 좀 덜 할 걸
3) 내 감정에 솔직할 걸
4) 옛 친구들을 지킬 걸
5) 좀 더 행복하게 살 걸
- 죽으면서 하는 가장 흔한 후회 5가지
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
기다리는 일이 사랑하는 일보다 더 고통스러울 때가 있다.
하지만 그것을 극복하지 못하는 사랑을 어찌
진정한 사랑이라고 말할 수 있으랴.
- 이외수
&lt;/pre&gt;
&lt;pre class="literal-block"&gt;
작은 일도 무시하지 않고 최선을 다해야 한다.

작은 일에도 최선을 다하면 정성스럽게 된다.
정성스럽게 되면 겉에 배어 나오고
겉에 배어 나오면 겉으로 드러나고
겉으로 드러나면 이내 밝아지고
밝아지면 남을 감동시키고
남을 감동시키면 이내 변하게 되고 변하면 생육된다.

그러니 오직 세상에서 지극히 정성을 다하는 사람만이
나와 세상을 변하게 할 수 있는 것이다.
- 중용
&lt;/pre&gt;
</content></entry><entry><title>면접자로서 면접시에 물어보고 싶은 질문들</title><link href="/myeonjeobjaroseo-myeonjeobsie-muleobogo-sipeun-jilmundeul.html" rel="alternate"></link><published>2017-09-29T11:51:34+09:00</published><updated>2017-09-29T11:51:34+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-09-29:/myeonjeobjaroseo-myeonjeobsie-muleobogo-sipeun-jilmundeul.html</id><summary type="html">&lt;h4&gt;대략적인 질문&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;개발 방법론(scrum?)&lt;/li&gt;
&lt;li&gt;업무 시간, 출퇴근 시간&lt;/li&gt;
&lt;li&gt;개발 pc 지급?&lt;/li&gt;
&lt;li&gt;휴가&lt;/li&gt;
&lt;li&gt;비전&lt;/li&gt;
&lt;li&gt;계획&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;업무적인 질문&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;인력 구성&lt;/li&gt;
&lt;li&gt;구체적인 업무&lt;/li&gt;
&lt;li&gt;기대하는 역할&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;기술적인 질문&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;기술적 어려움&lt;/li&gt;
&lt;li&gt;주언어&lt;/li&gt;
&lt;li&gt;작업관리툴(jira)&lt;/li&gt;
&lt;li&gt;코드리뷰&lt;/li&gt;
&lt;li&gt;TDD&lt;/li&gt;
&lt;li&gt;CI&lt;/li&gt;
&lt;li&gt;소통 채널&lt;/li&gt;
&lt;li&gt;배포 주기&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;운용환경&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;AWS
  -&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;동료상&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;선호&lt;/li&gt;
&lt;li&gt;비선호&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;h4&gt;대략적인 질문&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;개발 방법론(scrum?)&lt;/li&gt;
&lt;li&gt;업무 시간, 출퇴근 시간&lt;/li&gt;
&lt;li&gt;개발 pc 지급?&lt;/li&gt;
&lt;li&gt;휴가&lt;/li&gt;
&lt;li&gt;비전&lt;/li&gt;
&lt;li&gt;계획&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;업무적인 질문&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;인력 구성&lt;/li&gt;
&lt;li&gt;구체적인 업무&lt;/li&gt;
&lt;li&gt;기대하는 역할&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;기술적인 질문&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;기술적 어려움&lt;/li&gt;
&lt;li&gt;주언어&lt;/li&gt;
&lt;li&gt;작업관리툴(jira)&lt;/li&gt;
&lt;li&gt;코드리뷰&lt;/li&gt;
&lt;li&gt;TDD&lt;/li&gt;
&lt;li&gt;CI&lt;/li&gt;
&lt;li&gt;소통 채널&lt;/li&gt;
&lt;li&gt;배포 주기&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;운용환경&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;AWS
  -&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;동료상&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;선호&lt;/li&gt;
&lt;li&gt;비선호&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>따릉이 사용량</title><link href="/my-super-post.html" rel="alternate"></link><published>2017-09-27T10:20:00+09:00</published><updated>2017-09-27T10:20:00+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-09-27:/my-super-post.html</id><summary type="html">&lt;p&gt;&lt;img src="images/number-of-bikes-using-in-seoul-0925.png" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;파랑 - 실제 주차장에 주차되어있는 수&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img src="images/number-of-bikes-using-in-seoul-0925.png" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;파랑 - 실제 주차장에 주차되어있는 수&lt;/p&gt;</content><category term="data"></category></entry><entry><title>Elasticbeans talk</title><link href="/elasticbeans-talk.html" rel="alternate"></link><published>2017-09-13T17:44:50+09:00</published><updated>2017-09-13T17:44:50+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-09-13:/elasticbeans-talk.html</id><summary type="html">&lt;h4&gt;Elasticbeanstalk health check&lt;/h4&gt;
&lt;p&gt;EB에서는 Health check 하는 기능을 기본적으로 포함하고 있다. 이것을 위해서는 Django에서 health check 요청을 허락하는 설정이 필요하다.
Route53에서 설정된 Domain으로 요청은 한다고 잘못생각해서 오랫동안 고민했다.&lt;/p&gt;
&lt;p&gt;&lt;img src="images/elasticbeans-health-check-0913.png" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;https://gist.github.com/dryan/8271687&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;EC2_IP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://169.254.169.254/latest/meta-data/local-ipv4&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;append&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EC2_IP …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h4&gt;Elasticbeanstalk health check&lt;/h4&gt;
&lt;p&gt;EB에서는 Health check 하는 기능을 기본적으로 포함하고 있다. 이것을 위해서는 Django에서 health check 요청을 허락하는 설정이 필요하다.
Route53에서 설정된 Domain으로 요청은 한다고 잘못생각해서 오랫동안 고민했다.&lt;/p&gt;
&lt;p&gt;&lt;img src="images/elasticbeans-health-check-0913.png" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;https://gist.github.com/dryan/8271687&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;EC2_IP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://169.254.169.254/latest/meta-data/local-ipv4&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;append&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EC2_IP&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;except&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;RequestException&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;해결 : 위의 설정은 settings.py에 추가하자&lt;/p&gt;
&lt;h4&gt;헤더에 Authorization 값 전달이 기본 설정이 아니다.&lt;/h4&gt;
&lt;p&gt;request에 호함된 모든 헤더값(사용자 토큰값)이 서버에 자동으로 전달이 되는 것이 기본인줄 알았는데, 그렇지 않더라. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[wsgi_enabled_pass.config]&lt;/span&gt;

&lt;span class="na"&gt;container_commands:&lt;/span&gt;
  &lt;span class="na"&gt;01_wsgipass:&lt;/span&gt;
    &lt;span class="na"&gt;command: &amp;#39;echo &amp;quot;WSGIPassAuthorization On&amp;quot; &amp;gt;&amp;gt; ../wsgi.conf&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;http://mattharris.org/2015/11/30/setting-aws-elasticbeanstalk-environment-wsgi-authorization/&lt;/p&gt;</content></entry><entry><title>"data.go.kr"</title><link href="/datagokr.html" rel="alternate"></link><published>2017-09-03T14:29:11+09:00</published><updated>2017-09-03T14:29:11+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-09-03:/datagokr.html</id><summary type="html">&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;단독/다가구 전월세 지수 변화, 2004~2016 &lt;a href="https://s3.ap-northeast-2.amazonaws.com/hmapps/data/home_loan_201708_900x500.html"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;지역코드와 기간을 이용하여 해당기간, 해당지역의 단독다가구 전월세 신고자료를 제공하는 단독다가구 전월세 신고 정보 조회&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이력 소개 &lt;a href="http://bit.ly/2f9Xjdp"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;단독/다가구 전월세 지수 변화, 2004~2016 &lt;a href="https://s3.ap-northeast-2.amazonaws.com/hmapps/data/home_loan_201708_900x500.html"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;지역코드와 기간을 이용하여 해당기간, 해당지역의 단독다가구 전월세 신고자료를 제공하는 단독다가구 전월세 신고 정보 조회&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이력 소개 &lt;a href="http://bit.ly/2f9Xjdp"&gt;link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>"Experience"</title><link href="/experience.html" rel="alternate"></link><published>2017-09-02T15:51:22+09:00</published><updated>2017-09-02T15:51:22+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-09-02:/experience.html</id><summary type="html">&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Backend developer at Modn, 2017.07&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backend developer at Modernlab, 2017.04 ~ 2017.07&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backend developer at Truffls, 2016.03 ~ 2016.09
  &lt;a href="https://truffls.de/en/"&gt;https://truffls.de/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="images/company/truffls1.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;Django admin에 신규 기능 추가후 소개, Truffls&lt;/p&gt;
&lt;p&gt;&lt;img src="images/company/truffls2.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;직원 기념 사진, Truffls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QA Engineer at Delivery, 2015.06 ~ 2016.03
  https://www.lieferheld.de/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="images/company/delivery1.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;Tech …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Backend developer at Modn, 2017.07&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backend developer at Modernlab, 2017.04 ~ 2017.07&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Backend developer at Truffls, 2016.03 ~ 2016.09
  &lt;a href="https://truffls.de/en/"&gt;https://truffls.de/en/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="images/company/truffls1.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;Django admin에 신규 기능 추가후 소개, Truffls&lt;/p&gt;
&lt;p&gt;&lt;img src="images/company/truffls2.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;직원 기념 사진, Truffls&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QA Engineer at Delivery, 2015.06 ~ 2016.03
  https://www.lieferheld.de/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="images/company/delivery1.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;Tech Friday, 매주 금요일 오후에 각 부서의 기술 공유시간, &lt;a href="https://www.lieferheld.de/"&gt;Delivery Hero&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="images/company/delivery2.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;날이 너무 좋아서 야외 Sprint meeting, Delivery Hero&lt;/p&gt;
&lt;p&gt;&lt;img src="images/company/delivery3.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;유럽 구경 &lt;a href="https://www.google.co.kr/maps/@51.505779,12.6114361,9z?hl=en"&gt;Leipzig, Germany&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Backend python developer at Yogiyo, 2013.03 ~ 2015.06
  https://www.yogiyo.co.kr/mobile/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="images/company/yogiyo1.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;주간 모임, Yogiyo
&lt;img src="images/company/yogiyo2.jpg" style="max-width:700px"&gt;
개발팀 발표(Den), Yogiyo&lt;/p&gt;
&lt;p&gt;&lt;img src="images/company/yogiyo4.jpg" style="max-width:700px"&gt;
Agile 교육 시간, Yogiyo&lt;/p&gt;
&lt;p&gt;&lt;img src="images/company/yogiyo5.jpg" style="max-width:700px"&gt;&lt;/p&gt;
&lt;p&gt;동료들과 봄나들이, Yogiyo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Software Engineer at Wind river, 2012.03 ~ 2013.02&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Software Engineer at Posco ICT, 2008.02 ~ 2011.04&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Intern at Ewastecenter, 2006.06 ~ 2007.07&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>"aws cloudtrail and config"</title><link href="/aws-cloudtrail-and-config.html" rel="alternate"></link><published>2017-08-01T11:33:23+09:00</published><updated>2017-08-01T11:33:23+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-08-01:/aws-cloudtrail-and-config.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AWS Config Rules, 서울 리전 출시! &lt;a href="https://aws.amazon.com/ko/blogs/korea/category/aws-config"&gt;https://aws.amazon.com/ko/blogs/korea/category/aws-config&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;임기성 :: 2015 리인벤트 리캡 게이밍  &lt;a href="https://www.slideshare.net/awskorea/20151118-reinvent-recap-for-gaming-3-security-on-aws-waf-aws-inspector-config-rules-gisung-lim"&gt;https://www.slideshare.net/awskorea/20151118-reinvent-recap-for-gaming-3-security-on-aws-waf-aws-inspector-config-rules-gisung-lim&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWS Summit Seoul 2016  &lt;a href="https://www.slideshare.net/awskorea/agile-security-operational-strategy-leveraging-advanced-security-services-of-aws-gisung-lim"&gt;https://www.slideshare.net/awskorea/agile-security-operational-strategy-leveraging-advanced-security-services-of-aws-gisung-lim&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AWS Config Rules, 서울 리전 출시! &lt;a href="https://aws.amazon.com/ko/blogs/korea/category/aws-config"&gt;https://aws.amazon.com/ko/blogs/korea/category/aws-config&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;임기성 :: 2015 리인벤트 리캡 게이밍  &lt;a href="https://www.slideshare.net/awskorea/20151118-reinvent-recap-for-gaming-3-security-on-aws-waf-aws-inspector-config-rules-gisung-lim"&gt;https://www.slideshare.net/awskorea/20151118-reinvent-recap-for-gaming-3-security-on-aws-waf-aws-inspector-config-rules-gisung-lim&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWS Summit Seoul 2016  &lt;a href="https://www.slideshare.net/awskorea/agile-security-operational-strategy-leveraging-advanced-security-services-of-aws-gisung-lim"&gt;https://www.slideshare.net/awskorea/agile-security-operational-strategy-leveraging-advanced-security-services-of-aws-gisung-lim&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="aws"></category></entry><entry><title>"rds-parameter-group"</title><link href="/rds-parameter-group.html" rel="alternate"></link><published>2017-06-22T11:51:34+09:00</published><updated>2017-06-22T11:51:34+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-06-22:/rds-parameter-group.html</id><summary type="html">&lt;h3&gt;문제&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;postgres에 SELECT 문장을 요청할 경우 발생, 일반적인 요청은 문제가 없으나 &lt;code&gt;order by&lt;/code&gt; 이후에 들어오는 컬럼이 한글값을 가진 경우가 문제.&lt;/p&gt;
&lt;p&gt;정렬이 되는 듯하나 유심히 순서를 확인해보면 맞지가 않다.
그래서 구글링해보니 같은 문제를 겪은 사람들이 있었다.
- postgresql 에서 한글 정렬 문제 해결하기 &lt;a href="https://ansuchan.com/postgresql-korean-order/"&gt;https://ansuchan.com/postgresql-korean-order/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL 한글 정렬 &lt;a href="http://tech.jinto.pe.kr/165"&gt;http://tech …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;문제&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;postgres에 SELECT 문장을 요청할 경우 발생, 일반적인 요청은 문제가 없으나 &lt;code&gt;order by&lt;/code&gt; 이후에 들어오는 컬럼이 한글값을 가진 경우가 문제.&lt;/p&gt;
&lt;p&gt;정렬이 되는 듯하나 유심히 순서를 확인해보면 맞지가 않다.
그래서 구글링해보니 같은 문제를 겪은 사람들이 있었다.
- postgresql 에서 한글 정렬 문제 해결하기 &lt;a href="https://ansuchan.com/postgresql-korean-order/"&gt;https://ansuchan.com/postgresql-korean-order/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PostgreSQL 한글 정렬 &lt;a href="http://tech.jinto.pe.kr/165"&gt;http://tech.jinto.pe.kr/165&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;해결책&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;해결책은 다행히도 간단하다. db 생성시에 &lt;code&gt;LC_COLLATE 'C'&lt;/code&gt; 옵션을 주면 되는 것.
단 이미 사용중인 db인 경우는 재생성해야 하는 번거로움이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;postgres의 한글 정렬
https://jupiny.com/2016/12/12/sort-korean-in-postgresql/&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아래는 rds에서 collate 값을 변경이 필요한 경우
&lt;img alt="/images/rds-parameter-groups.png" src="/images/rds-parameter-groups.png"&gt;&lt;/p&gt;</content></entry><entry><title>"git tips"</title><link href="/git-tips.html" rel="alternate"></link><published>2017-05-16T17:12:50+09:00</published><updated>2017-05-16T17:12:50+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-05-16:/git-tips.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;특정 함수의 변경을 확인 : git log -L &lt;/li&gt;
&lt;li&gt;merge시 conflict가 발생하면, merge 시도 이전으로 되돌릴 수 있다. : git merge --abort&lt;/li&gt;
&lt;li&gt;버그가 발견한 commit를 추적 : git bisect&lt;/li&gt;
&lt;li&gt;commit.template&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;특정 함수의 변경을 확인 : git log -L &lt;/li&gt;
&lt;li&gt;merge시 conflict가 발생하면, merge 시도 이전으로 되돌릴 수 있다. : git merge --abort&lt;/li&gt;
&lt;li&gt;버그가 발견한 commit를 추적 : git bisect&lt;/li&gt;
&lt;li&gt;commit.template&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>"글을 매일 쓰는 방법"</title><link href="/geuleul-maeil-sseuneun-bangbeob.html" rel="alternate"></link><published>2017-05-15T17:26:17+09:00</published><updated>2017-05-15T17:26:17+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-05-15:/geuleul-maeil-sseuneun-bangbeob.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://medium.com/startup-grind/25-habits-that-will-make-you-a-writer-c9f81b58978e"&gt;25 Habits That Will Make You a Writer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다문다독다상량(多聞多讀多商量, 많이 듣고 많이 읽고 많이 생각하라)
다독다작다상량(多讀多作多商量, 많이 읽고 많이 쓰고 많이 생각하라)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;매일 글을 쓴다.
하루를 보내며 재미있었던 일&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://medium.com/startup-grind/25-habits-that-will-make-you-a-writer-c9f81b58978e"&gt;25 Habits That Will Make You a Writer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다문다독다상량(多聞多讀多商量, 많이 듣고 많이 읽고 많이 생각하라)
다독다작다상량(多讀多作多商量, 많이 읽고 많이 쓰고 많이 생각하라)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;매일 글을 쓴다.
하루를 보내며 재미있었던 일&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>"AWS와 친구 되기"</title><link href="/awswa-cingu-doegi.html" rel="alternate"></link><published>2017-05-15T17:05:34+09:00</published><updated>2017-05-15T17:05:34+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-05-15:/awswa-cingu-doegi.html</id><summary type="html">&lt;h2&gt;아테나 성능 튜닝 팁 - 정도현&lt;/h2&gt;
&lt;p&gt;Amazon Athena is an interactive query service that makes it easy to analyze data stored in Amazon S3 using standard SQL
- big-data &lt;a href="https://aws.amazon.com/ko/blogs/big-data/"&gt;https://aws.amazon.com/ko/blogs/big-data/&lt;/a&gt;
- Top 10 Performance Tuning Tips for Amazon Athena &lt;a href="https://aws.amazon.com/ko/blogs/big-data/top-10-performance-tuning-tips-for-amazon-athena/"&gt;https://aws.amazon.com/ko/blogs/big-data/top-10-performance-tuning-tips-for-amazon-athena …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;아테나 성능 튜닝 팁 - 정도현&lt;/h2&gt;
&lt;p&gt;Amazon Athena is an interactive query service that makes it easy to analyze data stored in Amazon S3 using standard SQL
- big-data &lt;a href="https://aws.amazon.com/ko/blogs/big-data/"&gt;https://aws.amazon.com/ko/blogs/big-data/&lt;/a&gt;
- Top 10 Performance Tuning Tips for Amazon Athena &lt;a href="https://aws.amazon.com/ko/blogs/big-data/top-10-performance-tuning-tips-for-amazon-athena/"&gt;https://aws.amazon.com/ko/blogs/big-data/top-10-performance-tuning-tips-for-amazon-athena/&lt;/a&gt;
- Introduction to Amazon Athena &lt;a href="https://www.slideshare.net/AmazonWebServices/introduction-to-amazon-athena"&gt;https://www.slideshare.net/AmazonWebServices/introduction-to-amazon-athena&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;웨비나&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/ko/about-aws/events/"&gt;https://aws.amazon.com/ko/about-aws/events/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/ko/answers/"&gt;https://aws.amazon.com/ko/answers/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/ko/this-is-my-architecture/"&gt;https://aws.amazon.com/ko/this-is-my-architecture/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Aws public data set&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://aws.amazon.com/ko/public-datasets/&lt;/li&gt;
&lt;li&gt;https://aws.amazon.com/ko/1000genomes/&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;AWS Korea User Group (AWSKRUG) https://www.meetup.com/awskrug/&lt;/p&gt;
&lt;/blockquote&gt;</content></entry><entry><title>"소담에서의 시작"</title><link href="/sodameseoyi-sijag.html" rel="alternate"></link><published>2017-04-13T10:32:17+09:00</published><updated>2017-04-13T10:32:17+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-04-13:/sodameseoyi-sijag.html</id><summary type="html">&lt;h4&gt;소감&lt;/h4&gt;
&lt;p&gt;낯설지만 자유롭다.
이변이 없는한 같은 사무실 같은 자리에서 출근과 동시에 퇴근할 때까지 같은 곳에 머무르던 기존 직장과 달리, 여기 소담은 매일 같은 장소에서 일하기는 어렵다. 커피숍 자리를 이용하기 때문에 누군가 어제 내가 머물렀던 자리를 먼저 점령했다면 다를 의자를 알아봐야 한다.&lt;/p&gt;
&lt;p&gt;익숙함을 거부하고 새로움을 쫓아 다녔던 나지만, 막상 갑작스럽고 엄청난 …&lt;/p&gt;</summary><content type="html">&lt;h4&gt;소감&lt;/h4&gt;
&lt;p&gt;낯설지만 자유롭다.
이변이 없는한 같은 사무실 같은 자리에서 출근과 동시에 퇴근할 때까지 같은 곳에 머무르던 기존 직장과 달리, 여기 소담은 매일 같은 장소에서 일하기는 어렵다. 커피숍 자리를 이용하기 때문에 누군가 어제 내가 머물렀던 자리를 먼저 점령했다면 다를 의자를 알아봐야 한다.&lt;/p&gt;
&lt;p&gt;익숙함을 거부하고 새로움을 쫓아 다녔던 나지만, 막상 갑작스럽고 엄청난 자유를 코앞에서 만나고 나니 그저 기쁘지만은 않다.
다른 사람자리를 사용한다는 불편한 느낌이랄까.&lt;/p&gt;
&lt;h4&gt;근무환경&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;장소 : 경희대 앞 LEFT COOFFEE, Cow and Dog&lt;/li&gt;
&lt;li&gt;요일 : 수,목,금,토,일&lt;/li&gt;
&lt;li&gt;시간 : 11:00~20:00&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;프로젝트 환경&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Backend : Django&lt;/li&gt;
&lt;li&gt;Frontend : NG2&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>"init sodam"</title><link href="/init-sodam.html" rel="alternate"></link><published>2017-04-03T17:22:35+09:00</published><updated>2017-04-03T17:22:35+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-04-03:/init-sodam.html</id><summary type="html">&lt;p&gt;upgrade pip
pip3 install -U pip &lt;/p&gt;
&lt;p&gt;가상환경
mkvirtualenv sodam -p /usr/bin/python3 &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th align="center"&gt;Are&lt;/th&gt;
&lt;th align="right"&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td align="center"&gt;right-aligned&lt;/td&gt;
&lt;td align="right"&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td align="center"&gt;centered&lt;/td&gt;
&lt;td align="right"&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary><content type="html">&lt;p&gt;upgrade pip
pip3 install -U pip &lt;/p&gt;
&lt;p&gt;가상환경
mkvirtualenv sodam -p /usr/bin/python3 &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th align="center"&gt;Are&lt;/th&gt;
&lt;th align="right"&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td align="center"&gt;right-aligned&lt;/td&gt;
&lt;td align="right"&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td align="center"&gt;centered&lt;/td&gt;
&lt;td align="right"&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content></entry><entry><title>"build a chat app with django"</title><link href="/build-a-chat-app-with-django.html" rel="alternate"></link><published>2017-03-13T14:29:24+09:00</published><updated>2017-03-13T14:29:24+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-03-13:/build-a-chat-app-with-django.html</id><summary type="html">&lt;h2&gt;기능 요구사항&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1:1 대화를 주고 받는 웹 어플리케이션을 작성해주시길 바랍니다.
  http://rocketchat.healworld.co.kr/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;화면은 이미지를 참고로 하여 작성해주시길 바랍니다. (화면의 모든 기능이 꼭 존재할 필요는 없습니다.)&lt;br&gt;
링크는 깨짐(404) 대략적인 위치는 기억하여 진행함(좌측 대화방, 오른쪽 대화 목록)
https://dl.dropboxusercontent.com/u/4338652/mini_project.png&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;대화 …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;기능 요구사항&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1:1 대화를 주고 받는 웹 어플리케이션을 작성해주시길 바랍니다.
  http://rocketchat.healworld.co.kr/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;화면은 이미지를 참고로 하여 작성해주시길 바랍니다. (화면의 모든 기능이 꼭 존재할 필요는 없습니다.)&lt;br&gt;
링크는 깨짐(404) 대략적인 위치는 기억하여 진행함(좌측 대화방, 오른쪽 대화 목록)
https://dl.dropboxusercontent.com/u/4338652/mini_project.png&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;대화 상대별로 대화방이 나뉘어 있으며, 각 대화방끼리 이동할 수 있어야 합니다.&lt;br&gt;
&lt;strong&gt;구현 성공&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;메시지를 전송하고 서로 이 내용을 확인할 수 있어야 합니다.&lt;br&gt;
&lt;strong&gt;구현 성공&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;대화는 서버에 저장되어 언제든 확인할 수 있어야 합니다.&lt;br&gt;
&lt;strong&gt;구현 성공&lt;/strong&gt;&lt;br&gt;
  http://rocketchat-backend.healworld.co.kr/admin/ &lt;br&gt;
  user:[rocket], password:[chat]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Django 또는 Flask로 작성해 주시길 바랍니다.&lt;br&gt;
&lt;strong&gt;Django==1.10.6&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Github, Bitbucket 등 접속 가능한 Git Remote Repository로 전달 바랍니다.
    Backend : https://github.com/harry81/rocketchat&lt;br&gt;
    Frontend : https://github.com/harry81/rocketchat-web&lt;br&gt;
    구조도 : https://goo.gl/7k5LUD&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;진행&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2017-3-20&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ws4redis에서는 [users, groups, sessions, broadcast] 와 같은 대상으로만 메시지를 보낼 수 있다. 이번 구현의 목적에 맞게 대화방을 바탕으로 사용자가 가입/발행(subscribe/publish) 할 수 있도록 구현&lt;/li&gt;
&lt;li&gt;작업 결과 마무리 및 문서화&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017-3-19&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사용자가 대화방을 변경한 경우 그에 해당하는 대화 목록이 노출되도록 변경&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017-3-18&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;그룹별 메시지 전송하기&lt;/li&gt;
&lt;li&gt;그룹별 메시지 보여주기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017-3-17&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EC2 인스턴스 설정 완료(Nginx + uWsgi)&lt;/li&gt;
&lt;li&gt;Frontend, Backend 구성 완료&lt;/li&gt;
&lt;li&gt;Deploy script 준비 완료&lt;/li&gt;
&lt;li&gt;APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/api-message/   chat.views.MessageAPIView       api-message-list
/api-message/&amp;lt;pk&amp;gt;/      chat.views.MessageAPIView       api-message-detail
/api-room/      chat.views.RoomAPIView  api-room-list
/api-room/&amp;lt;pk&amp;gt;/ chat.views.RoomAPIView  api-room-detail
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2017-3-16 AWS에서 소켓 사용의 어려움2&lt;br&gt;
AWS 에서 socket server 설정이 생각보다 알아야 할 제품 관련 지식이 많다. 즉 언어와 프레임웍 관련 내용이라기 보다는 AWS에서 제공하는 제품군의 사용과 설정에 대한 내용들이다. 아마존에서 web socket를 지원하나 이 기능을 위해서는 Classic Load Balancer 대신 Amazon Load Balancer으로 설정이 필요하다.
&lt;code&gt;Amazon Load Balancer ---- Target Group ---- Instance&lt;/code&gt;&lt;br&gt;
생각보다 금방 마무리 될 줄 알았던 socket server 설정작업이 파면팔수록 걸리는 문제들이 많았으나, 이 방법밖에는 떠오르지 않아 3일 정도의 시간을 투자했다. 결국은 AWS 생태계를 더 헤아리지 않고서는 어렵다고 판단했다. EB 대신 별도의 인스턴스를 만들어 Nginx와 uWsgi로 설정하기로 결정&lt;br&gt;
    방향 전환 -&amp;gt; Elasticbeanstalk with Amazon Load Balancer ---&amp;gt; &lt;em&gt;EC2 with Nginx and uWsgi&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017-3-15 AWS에서 소켓 사용의 어려움&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ELB 대신 ALB 사용 필요 &lt;/li&gt;
&lt;li&gt;이유 - http://stackoverflow.com/a/39491033/1118583&lt;/li&gt;
&lt;li&gt;설치 - https://blog.mangoforbreakfast.com/2017/02/13/django-channels-on-aws-elastic-beanstalk-using-an-alb/&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2017-3-14 실행 환경 세팅 및 브라우져에서 비동기 테스트&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elasticbeanstalk, RDS, Route 53, ELB&lt;/li&gt;
&lt;li&gt;shell plus에서 redis queue에 아래와 같은 형식으로 메시지 통신 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ws4redis.publisher&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RedisPublisher&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;ws4redis.redis_store&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RedisMessage&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;

    &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RedisMessage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;redis_publisher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;publish_message&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;2017-3-13 django에서 chat을 하기 위한 기술 및 패키지 확인&lt;ul&gt;
&lt;li&gt;https://github.com/stephenmcd/django-socketio
  github star 4개라서 기쁜 마음으로 테스트 해 보았으나, 패키지간 버젼 의존성 문제로 일단 다른 패키지 물색&lt;/li&gt;
&lt;li&gt;https://github.com/jrief/django-websocket-redis&lt;/li&gt;
&lt;li&gt;https://channels.readthedocs.io/en/stable/&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Packages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;http://django-websocket-redis.readthedocs.io/en/latest/&lt;/li&gt;
&lt;li&gt;https://github.com/stephenmcd/django-socketio&lt;/li&gt;
&lt;li&gt;https://github.com/jrief/django-websocket-redis/tree/master/ws4redis&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://github.com/ottoyiu/django-cors-headers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;https://github.com/angular/angular&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;https://github.com/afrad/angular2-websocket&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;오류 및 해결&lt;/h2&gt;
&lt;h3&gt;django-scoketio 설치후&lt;/h3&gt;
&lt;h4&gt;문제&lt;/h4&gt;
&lt;p&gt;```  python [linenos:false]&lt;/p&gt;
&lt;h1&gt;Django==1.10&lt;/h1&gt;
&lt;h1&gt;django-socketio==0.3.9&lt;/h1&gt;
&lt;p&gt;File "/home/harry/.virt_env/rocketpunch/local/lib/python2.7/site-packages/django_socketio/urls.py", line 1, in &lt;module&gt;
    from django.conf.urls import patterns, url
ImportError: cannot import name patterns&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#### 해결 ####

``` python requirements.txt
-e git+https://github.com/stephenmcd/django-socketio.git#egg=django-socketio
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;문제&lt;/h4&gt;
&lt;p&gt;로컬에서 ws4redis를 이용하여 메시지를 주고 받는 것에는 문제가 없었으나 AWS상에서는 아래와 같은 소켓 통신에 문제가 발생&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;WebSocket connection to &amp;#39;ws://rocketpunch-app.tdirjp8mny.ap-northeast-2.elasticbeanstalk.com/ws/chat?subscribe-broadcast&amp;amp;publish-broadcast&amp;#39; failed:
Error during WebSocket handshake: Unexpected response code: 404
...
app.component.ts:41 Error: undefined
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;angular2-websocket.js:52 WebSocket connection to &amp;#39;ws://rocketpunch-app.tdirjp8mny.ap-northeast-2.elasticbeanstalk.com/ws/chat?subscribe-broadcast&amp;amp;publish-broadcast&amp;#39; failed:
Error during WebSocket handshake: Unexpected response code: 504
...
app.component.ts:41 Error: undefined
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;해결&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Amazon Load Balance with Elastic Beanstalk
  https://blog.mangoforbreakfast.com/2017/02/13/django-channels-on-aws-elastic-beanstalk-using-an-alb/&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;문제&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;you need to build uWSGI with SSL support to use the websocket handshake api function !!!
Other Exception: unable to complete websocket handshake
Traceback (most recent call last):
  File &amp;quot;/home/ubuntu/virtualenvs/app/local/lib/python2.7/site-packages/ws4redis/wsgi_server.py&amp;quot;, line 101, in __call__
    websocket = self.upgrade_websocket(environ, start_response)
  File &amp;quot;/home/ubuntu/virtualenvs/app/local/lib/python2.7/site-packages/ws4redis/uwsgi_runserver.py&amp;quot;, line 52, in upgrade_websocket
    uwsgi.websocket_handshake(environ[&amp;#39;HTTP_SEC_WEBSOCKET_KEY&amp;#39;], environ.get(&amp;#39;HTTP_ORIGIN&amp;#39;, &amp;#39;&amp;#39;))
IOError: unable to complete websocket handshake
Starting late response on websocket
Finish non-websocket response with status code: 500
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;해결&lt;/h4&gt;
&lt;p&gt;Recompile uwsgi with support openssl&lt;/p&gt;
&lt;h4&gt;문제&lt;/h4&gt;
&lt;p&gt;사용자가 request를 서버에 요청했을 때,
``` text nginx error log
2017/03/17 03:29:44 [error] 17644#17644: &lt;em&gt;2 upstream prematurely closed connection while reading response header from upstream, client: 172.31.4.186, server: rocketchat.healworld.co.kr, request: "GET / HTTP/1.1", upstream: "uwsgi://unix:///tmp/uwsgi.sock:", host: "rocketchatalb.healworld.co.kr"
2017/03/17 03:29:45 [error] 17644#17644: &lt;/em&gt;2 upstream prematurely closed connection while reading response header from upstream, client: 172.31.4.186, server: rocketchat.healworld.co.kr, request: "GET /favicon.ico HTTP/1.1", upstream: "uwsgi://unix:///tmp/uwsgi.sock:", host: "rocketchatalb.healworld.co.kr", referrer: "http://rocketchatalb.healworld.co.kr/"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#### 문제 ####
local에서는 문제없이 시작 페이지가 열리나, `ng build` 이후 서버에서는 아래와 같은 오류발생하며 angular가 아무런 내용도 보여주지 않는다.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Uncaught (in promise): Error: DI Error / Unhandled Promise rejection: No provider for t! ; Zone: angular ; Task: Promise.then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;####&lt;/span&gt; &lt;span class="nt"&gt;해결&lt;/span&gt; &lt;span class="err"&gt;####&lt;/span&gt;

&lt;span class="nt"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;salemdar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;angular2-cookie&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;issues&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;37&lt;/span&gt;




&lt;span class="err"&gt;####&lt;/span&gt; &lt;span class="nt"&gt;해결&lt;/span&gt; &lt;span class="err"&gt;####&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;Installing&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;python&lt;/span&gt; &lt;span class="nt"&gt;plugin&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;uwsgi&lt;/span&gt; &lt;span class="nt"&gt;with&lt;/span&gt; &lt;span class="nt"&gt;apt-get&lt;/span&gt; &lt;span class="nt"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;uwsgi-plugin-python&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;adding&lt;/span&gt; &lt;span class="nt"&gt;plugins&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;python&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;individual&lt;/span&gt; &lt;span class="nt"&gt;uwsgi&lt;/span&gt; &lt;span class="nt"&gt;app&lt;/span&gt; &lt;span class="nt"&gt;config&lt;/span&gt; &lt;span class="nt"&gt;solved&lt;/span&gt; &lt;span class="nt"&gt;this&lt;/span&gt; &lt;span class="nt"&gt;problem&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;me&lt;/span&gt; &lt;span class="nt"&gt;on&lt;/span&gt; &lt;span class="nt"&gt;Ubuntu&lt;/span&gt; &lt;span class="nt"&gt;11&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;10&lt;/span&gt; &lt;span class="nt"&gt;when&lt;/span&gt; &lt;span class="nt"&gt;using&lt;/span&gt; &lt;span class="nt"&gt;upstart&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="nt"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;stackoverflow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;questions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;10748108&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx-uwsgi-unavailable-modifier-requested-0&lt;/span&gt;

&lt;span class="nt"&gt;-------------------------------------------------------------------------------&lt;/span&gt;

&lt;span class="nt"&gt;설정&lt;/span&gt;
&lt;span class="nt"&gt;----&lt;/span&gt;

&lt;span class="err"&gt;```&lt;/span&gt;&lt;span class="nt"&gt;text&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;sites-available&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;rocketchat&lt;/span&gt;
&lt;span class="nt"&gt;upstream&lt;/span&gt; &lt;span class="nt"&gt;django&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;server&lt;/span&gt; &lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;///&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;uwsgi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;upstream&lt;/span&gt; &lt;span class="nt"&gt;ws&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;server&lt;/span&gt; &lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;///&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;listen&lt;/span&gt; &lt;span class="err"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="err"&gt;server_name&lt;/span&gt; &lt;span class="err"&gt;rocketchat.healworld.co.kr&lt;/span&gt; &lt;span class="err"&gt;rocketchatalb.healworld.co.kr&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;index&lt;/span&gt; &lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="err"&gt;location&lt;/span&gt; &lt;span class="err"&gt;/&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
                &lt;span class="err"&gt;include&lt;/span&gt; &lt;span class="err"&gt;uwsgi_params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="err"&gt;uwsgi_pass&lt;/span&gt; &lt;span class="err"&gt;django&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nt"&gt;location&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;ws&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="err"&gt;proxy_pass&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;unix&lt;/span&gt;&lt;span class="o"&gt;:/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ws&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="err"&gt;proxy_http_version&lt;/span&gt; &lt;span class="err"&gt;1.1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="err"&gt;proxy_set_header&lt;/span&gt; &lt;span class="err"&gt;Upgrade&lt;/span&gt; &lt;span class="err"&gt;$http_upgrade&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="err"&gt;proxy_set_header&lt;/span&gt; &lt;span class="err"&gt;Connection&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;upgrade&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;sudo service  nginx restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;``` text uwsgi config for django app
[uwsgi]
chdir           = /home/ubuntu/app
module          = main.wsgi
home            = /home/ubuntu/virtualenvs/app/&lt;/p&gt;
&lt;p&gt;master          = true
processes       = 2
socket          = /tmp/uwsgi.sock
chmod-socket    = 666
vacuum          = true&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;`uwsgi --ini uwsgi.ini`

``` text uwsgi config for socket
[uwsgi]
chdir           = /home/ubuntu/app
module          = main.wsgi_websocket
home            = /home/ubuntu/virtualenvs/app/

master          = true
processes       = 100
http-socket          = /tmp/ws.sock
chmod-socket    = 666
vacuum          = true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;uwsgi --ini ws.ini&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;static web page&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# 버킷 생성
aws s3 mb  s3://rocketchat.healworld.co.kr/  --profile pointer --region ap-northeast-2
# 버킷을 website 가능하게 변경
aws s3 website s3://rocketchat.healworld.co.kr/ --index-document index.html --error-document error.html --profile pointer --region ap-northeast-2
# static files 업로드
aws s3 sync dist s3://rocketchat.healworld.co.kr/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers --profile pointer --region ap-northeast-2
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h2&gt;배포&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fab deploy
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>index gs shop</title><link href="/index-gs-shop.html" rel="alternate"></link><published>2017-03-09T16:05:52+09:00</published><updated>2017-03-09T16:05:52+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-03-09:/index-gs-shop.html</id><summary type="html">&lt;h3&gt;도전&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GS SHOP의 방송편성표를 보여주는 웹 페이지를 작성&lt;/li&gt;
&lt;li&gt;관련 기술
  &lt;code&gt;Elasticsearch 플러그인&lt;/code&gt;, &lt;code&gt;형태소 분석기&lt;/code&gt;, &lt;code&gt;Thrift 서버&lt;/code&gt;, &lt;code&gt;HAProxy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;형태소 분석이 필요한 이유?&lt;br&gt;
  한국어 분석을 지원하지 않는다. 예를 들어 "아버지가 방에 들어간다"라는 한국어 문장을 인덱스해도 "아버지"로는 검색이 안 되고, 반드시 "아버지가"로 검색해야만 결과에 출력된다.&lt;/li&gt;
&lt;li&gt;형태소 분석기 - 은전 한  잎 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;도전&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;GS SHOP의 방송편성표를 보여주는 웹 페이지를 작성&lt;/li&gt;
&lt;li&gt;관련 기술
  &lt;code&gt;Elasticsearch 플러그인&lt;/code&gt;, &lt;code&gt;형태소 분석기&lt;/code&gt;, &lt;code&gt;Thrift 서버&lt;/code&gt;, &lt;code&gt;HAProxy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;형태소 분석이 필요한 이유?&lt;br&gt;
  한국어 분석을 지원하지 않는다. 예를 들어 "아버지가 방에 들어간다"라는 한국어 문장을 인덱스해도 "아버지"로는 검색이 안 되고, 반드시 "아버지가"로 검색해야만 결과에 출력된다.&lt;/li&gt;
&lt;li&gt;형태소 분석기 - 은전 한  잎(mecab-ko)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;설치&lt;/h3&gt;
&lt;p&gt;외부에서 접근 가능한 환경을 구현하기 위해서 AWS를 이용하기로 했다.&lt;/p&gt;
&lt;p&gt;Amazon Elasticsearch Service  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;search-buzzni-xusbuesxyq6c33zkupvvvmjof4.ap-northeast-2.es.amazonaws.com'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;``` python 연결확인
from datetime import datetime
from elasticsearch import Elasticsearch
host = 'search-buzzni-xusbuesxyq6c33zkupvvvmjof4.ap-northeast-2.es.amazonaws.com'
es = Elasticsearch([{'host': host,'port':80}])
print es.cluster.health()['status']&lt;/p&gt;
&lt;p&gt;es.indices.create(index='my-index', ignore=400)
es.index(index="my-index", doc_type="test-type", id=42, body={"any": "data", "timestamp": datetime.now()})&lt;/p&gt;
&lt;p&gt;es.get(index="my-index", doc_type="test-type", id=42)['_source']&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;### 해야 할 일 ###&lt;/span&gt;
  &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="err"&gt;크롤링&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="sb"&gt;`http://www.gsshop.com`&lt;/span&gt; &lt;span class="err"&gt;각&lt;/span&gt; &lt;span class="err"&gt;아이템의&lt;/span&gt; &lt;span class="err"&gt;세부&lt;/span&gt; &lt;span class="err"&gt;페이지&lt;/span&gt; &lt;span class="err"&gt;구하기&lt;/span&gt;
    &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="err"&gt;세부&lt;/span&gt; &lt;span class="err"&gt;페이지에&lt;/span&gt; &lt;span class="err"&gt;방문해&lt;/span&gt; &lt;span class="err"&gt;제품에&lt;/span&gt; &lt;span class="err"&gt;대한&lt;/span&gt; &lt;span class="err"&gt;구체적인&lt;/span&gt; &lt;span class="err"&gt;정보&lt;/span&gt; &lt;span class="err"&gt;얻기&lt;/span&gt;
&lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="err"&gt;추후에&lt;/span&gt; &lt;span class="n"&gt;celery&lt;/span&gt; &lt;span class="n"&gt;task에서&lt;/span&gt; &lt;span class="err"&gt;크롤링할&lt;/span&gt; &lt;span class="err"&gt;때&lt;/span&gt; &lt;span class="err"&gt;사용될&lt;/span&gt; &lt;span class="err"&gt;코드&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lxml&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;etree&lt;/span&gt;

&lt;span class="n"&gt;home_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://www.gsshop.com&amp;#39;&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prod_url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prod_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;prod_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prod_url&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;

    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;
    &lt;span class="n"&gt;ele_response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ele_response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;//span[contains(@class,&amp;#39;price-definition-ins&amp;#39;)]/ins/strong&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;//p[contains(@class,&amp;#39;product-title&amp;#39;)]/text()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="c1"&gt;# DOTO : 그외에 정보 추후 고려&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_list_of_product&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;list_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;home_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/tv/tvScheduleMain.gs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;list_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;prod_urls&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;tree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;etree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ele&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tree&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;//tr/td/div[contains(@class, &amp;#39;tdWrap&amp;#39;)]/a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ele&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
            &lt;span class="n"&gt;prod_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ele&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;@href&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;prod_urls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prod_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;prod_urls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;get_product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;데이타 인덱스 - 위에서 얻어진 정보를 ES에 인덱싱하여 저장&lt;/li&gt;
&lt;li&gt;형태소 분석 - ES에서 한글은 지원하지 않는다고 하므로 별도의 형태소 분석기 필요&lt;/li&gt;
&lt;li&gt;주기적으로 GS SHOP 페이지 정보 얻어오기(Celery)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;형태서 분석기 설치&lt;/h3&gt;
&lt;p&gt;AWS에서 제공하는 Elasticsearch에 직접 한글 형태소 분석기를 직접 설치 할 수 있는 방법은 찾지 못했다. 따라서 별도의 EC2 인스턴스를 만들어 그 인스턴스와 Elasticsearch가 통신할 수 있으면 같은 효과를 얻을 수 있다고 생각하였다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MECAB-KO 형태소 분석기 엔진&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;bitbucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;eunjeon&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mecab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ko&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;downloads&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mecab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.996&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ko&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xvzf&lt;/span&gt; &lt;span class="n"&gt;mecab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.996&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ko&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;2.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;mecab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.996&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ko&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;
&lt;span class="n"&gt;make&lt;/span&gt;
&lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;MECAB-KO-DIC 사전(DICTIONARY) 파일&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;bitbucket&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;org&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;eunjeon&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mecab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ko&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dic&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;downloads&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;mecab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ko&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;20140814.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xvzf&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;mecab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ko&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;20140814.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;mecab&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ko&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dic&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.6&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20140814&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;autogen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;
&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;
&lt;span class="n"&gt;make&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/usr/local/libexec/mecab/mecab-dict-index: error while loading shared libraries: libmecab.so.2: cannot open shared object file: no such file or directory
sudo ldconfig
grep /usr/local/lib
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;configure&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;compiler&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;powerful&lt;/span&gt; &lt;span class="n"&gt;enough&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;compile&lt;/span&gt; &lt;span class="n"&gt;MeCab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;yum&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;MECAB-KO 형태소 분석기와 MECAB-KO-DIC 사전파일 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mecab -d /usr/local/lib/mecab/dic/mecab-ko-dic
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;LIBMECAB.SO, MECAB.JAR 설치&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /tmp/
wget https://bitbucket.org/eunjeon/mecab-java/downloads/mecab-java-0.996.tar.gz
tar -xvzf mecab-java-0.996.tar.gz
cd mecab-java-0.996
vi Makefile
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo cp libMeCab.so /usr/local/lib
sudo cp MeCab.jar /usr/local/lib

sudo chown -R $(whoami):$(whoami) /usr/local/lib/libMeCab.so
sudo chown -R $(whoami):$(whoami) /usr/local/lib/MeCab.jar
sudo chown -R $(whoami):$(whoami) /usr/local/lib/*mecab*

export JAVA_HOME=/usr/java/jdk1.8.0_60/

sudo ln -s $JAVA_HOME/include/linux/jni_md.h $JAVA_HOME/include/jni_md.h
sudo ln -s $JAVA_HOME/include/linux/jawt_md.h $JAVA_HOME/include/jawt_md.h

cd /tmp
wget https://bitbucket.org/eunjeon/mecab-ko-lucene-analyzer/downloads/elasticsearch-analysis-mecab-ko-0.16.1.zip

export ES=/usr/share/elasticsearch/

$ES/bin/plugin --install analysis-mecab-ko-0.16.1 --url file:///tmp/elasticsearch-analysis-mecab-ko-0.16.1.zip
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;결론&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;한글 형태의 text를 ES에 인덱싱하여 텍스트 풀서치를 하는 아주 일반적인 환경을 구축하는 요구사항이었다.&lt;/li&gt;
&lt;li&gt;외부에서 접근 가능한 형태를 위해 AWS ES를 선택했는데, 한글 형태소 분석을 위해서 별도의 모듈을 설치해야만 했다.&lt;/li&gt;
&lt;li&gt;다행히 Python에서 ES를 제어하기 위한 활성화된 패키지(https://github.com/elastic/elasticsearch-py)가 있어 기능 구현을 위해서 큰 어려움이 없을 것 같았다. 하지만 그러한 환경 구축에 경험이 없어서 대부분의 시간을 설치를 하는데 소비하였다. &lt;/li&gt;
&lt;li&gt;결국은 요구한 미션을 마무리하지 못했다. 그 이유는&lt;ul&gt;
&lt;li&gt;ES에서 plugin을 어떤식으로 제어하고 활용하는 방법에 대한 이해 부족&lt;/li&gt;
&lt;li&gt;전반적인 패키지 구성에 대한 경험이 없어 많은 시간을 소비&lt;/li&gt;
&lt;li&gt;형태소 분석기 설치 문서가 있지만, 조금 시간이 지나서 그런지 지금 버전과 맞지 않아 설치에 애를 먹음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;배움&lt;ul&gt;
&lt;li&gt;AWS ES 설치는 생각보다 어렵지 않았다.&lt;/li&gt;
&lt;li&gt;은전한잎(mecab-ko)의 도움으로 형태소 분석이 가능하며, ES를 활용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;참고&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;elasticsearch로 로그 검색 시스템 만들기
  http://d2.naver.com/helloworld/273788 &lt;/li&gt;
&lt;li&gt;ELASTICSEARCH 한글 형태소 분석기(ANALYZER) 비교
  http://guruble.com/?p=437&lt;/li&gt;
&lt;li&gt;엘라스틱서치(elasticsearch)에 한글 형태소 분석기 은전한잎(eunjeon) 적용하기 - 
  http://blog.nacyot.com/articles/2015-06-13-eunjeon-with-elasticsearch/&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;관계형 데이터베이스&lt;/th&gt;
&lt;th&gt;elasticsearch&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Database&lt;/td&gt;
&lt;td&gt;Index&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table&lt;/td&gt;
&lt;td&gt;Type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Row&lt;/td&gt;
&lt;td&gt;Document&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Column&lt;/td&gt;
&lt;td&gt;Field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Schema&lt;/td&gt;
&lt;td&gt;Mapping&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Index&lt;/td&gt;
&lt;td&gt;Everything is indexed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SQL&lt;/td&gt;
&lt;td&gt;Query DSL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content></entry><entry><title>"senior work"</title><link href="/senior-work.html" rel="alternate"></link><published>2017-03-06T17:57:26+09:00</published><updated>2017-03-06T17:57:26+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-03-06:/senior-work.html</id><summary type="html">&lt;h3&gt;참고 사이트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;구미 노일 일자리 창출센터 http://www.gumisilver.or.kr/job/job_psn.asp&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;h3&gt;참고 사이트&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;구미 노일 일자리 창출센터 http://www.gumisilver.or.kr/job/job_psn.asp&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>"get title data api"</title><link href="/get-title-data-api.html" rel="alternate"></link><published>2017-03-04T17:53:15+09:00</published><updated>2017-03-04T17:53:15+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-03-04:/get-title-data-api.html</id><summary type="html">&lt;h3&gt;기본 matplotlib 이용하여 데이타 출력&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;  &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DataFrame&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="c1"&gt;# 한글 폰트 깨짐 방지&lt;/span&gt;
&lt;span class="n"&gt;krfont&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nanumgothic&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;krfont&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;open-api.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;기본 matplotlib 이용하여 데이타 출력&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt;  &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Series&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DataFrame&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="c1"&gt;# 한글 폰트 깨짐 방지&lt;/span&gt;
&lt;span class="n"&gt;krfont&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;family&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nanumgothic&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;matplotlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;font&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;krfont&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;open-api.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;groupby&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;read&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;kind&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;bokeh를 이용한 데이타 출력&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bokeh.plotting&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bokeh.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;push_notebook&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_notebook&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bokeh.charts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Line&lt;/span&gt;
&lt;span class="n"&gt;output_notebook&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;tooltips&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;read&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;box_plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;category&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
               &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;download&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="n"&gt;bar_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="n"&gt;agg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;data.go.kr 분류별 총합&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="n"&gt;tooltips&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tooltips&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;box_plot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="/images/bokeh_plot_20170307.png" src="/images/bokeh_plot_20170307.png"&gt;&lt;/p&gt;
&lt;h3&gt;handle yahoo data&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pandas_datareader&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wb&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bokeh.charts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Line&lt;/span&gt;
&lt;span class="n"&gt;plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;figure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;https://github.com/wesm/pydata-book&lt;/p&gt;</content></entry><entry><title>"uhopper-hadoop-docker"</title><link href="/uhopper-hadoop-docker.html" rel="alternate"></link><published>2017-03-02T17:11:16+09:00</published><updated>2017-03-02T17:11:16+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-03-02:/uhopper-hadoop-docker.html</id><summary type="html">&lt;h3&gt;docker-compose 를 이용해서&lt;/h3&gt;
&lt;p&gt;https://bitbucket.org/uhopper/hadoop-docker/&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://bitbucket.org/uhopper/hadoop-docker.git 

docker network create hadoop
docker network create kafka
docker volume create --name=hadoop_datanode1
docker volume create --name=hadoop_datanode2
docker volume create --name=hadoop_historyserver
docker volume create --name=hadoop_namenode
docker-compose up
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;docker-compose 를 이용해서&lt;/h3&gt;
&lt;p&gt;https://bitbucket.org/uhopper/hadoop-docker/&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://bitbucket.org/uhopper/hadoop-docker.git 

docker network create hadoop
docker network create kafka
docker volume create --name=hadoop_datanode1
docker volume create --name=hadoop_datanode2
docker volume create --name=hadoop_historyserver
docker volume create --name=hadoop_namenode
docker-compose up
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"spark docker 설치해보기"</title><link href="/spark-docker-seolcihaebogi.html" rel="alternate"></link><published>2017-02-28T18:34:41+09:00</published><updated>2017-02-28T18:34:41+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-28:/spark-docker-seolcihaebogi.html</id><summary type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Apache_Spark"&gt;Apache Spark is an open-source cluster-computing framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://github.com/sequenceiq/docker-spark&lt;/p&gt;
&lt;h3&gt;create virtualbox&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine create -d virtualbox spark
docker-machine create -d virtualbox namenode
docker-machine create -d virtualbox datanode1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;name node&lt;/h2&gt;
&lt;p&gt;https://github.com/sequenceiq/hadoop-docker&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# run docker hadoop
docker-machine start namenode; eval &amp;quot;$(docker-machine env namenode)&amp;quot;;

# 이미지 다운로드
docker pull …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Apache_Spark"&gt;Apache Spark is an open-source cluster-computing framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://github.com/sequenceiq/docker-spark&lt;/p&gt;
&lt;h3&gt;create virtualbox&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker-machine create -d virtualbox spark
docker-machine create -d virtualbox namenode
docker-machine create -d virtualbox datanode1
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;name node&lt;/h2&gt;
&lt;p&gt;https://github.com/sequenceiq/hadoop-docker&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# run docker hadoop
docker-machine start namenode; eval &amp;quot;$(docker-machine env namenode)&amp;quot;;

# 이미지 다운로드
docker pull sequenceiq/hadoop-docker:2.7.1

# 실행
docker run -it -p 50070:50070 -p 8088:8088 sequenceiq/hadoop-docker:2.7.1 /etc/bootstrap.sh -bash
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;data node&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# run docker hadoop
docker-machine start datanode1; eval &amp;quot;$(docker-machine env datanode1)&amp;quot;;

# 이미지 다운로드
docker pull sequenceiq/hadoop-docker:2.7.1

# 실행
docker run -it -p 50070:50070 -p 8088:8088 sequenceiq/hadoop-docker:2.7.1 /etc/bootstrap.sh -bash
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;spark&lt;/h2&gt;
&lt;p&gt;https://github.com/sequenceiq/docker-spark&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# run docker spark
docker-machine start spark; eval &amp;quot;$(docker-machine env spark)&amp;quot;;

#  bash
docker run -it -p 8088:8088 -p 8042:8042 -p 4040:4040 -h sandbox sequenceiq/spark:1.6.0 bash
&lt;/pre&gt;&lt;/div&gt;


&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;port&lt;/th&gt;
&lt;th&gt;components&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;50070&lt;/td&gt;
&lt;td&gt;HDFS NameNode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50050&lt;/td&gt;
&lt;td&gt;HDFS DataNode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50090&lt;/td&gt;
&lt;td&gt;HDFS Secondary NameNode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8088&lt;/td&gt;
&lt;td&gt;YARN Resource Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4042&lt;/td&gt;
&lt;td&gt;YARN Node Manager&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4040&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content></entry><entry><title>"python-recsys"</title><link href="/python-recsys.html" rel="alternate"></link><published>2017-02-21T16:53:36+09:00</published><updated>2017-02-21T16:53:36+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-21:/python-recsys.html</id><summary type="html">&lt;p&gt;python-recsys 따라하기&lt;br&gt;
http://ocelma.net/software/python-recsys/build/html/quickstart.html&lt;/p&gt;
&lt;p&gt;&lt;a href="https://grouplens.org/datasets/movielens/"&gt;ratings.csv 다운받는다&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;```python 사용자의 입력 모델화 하여 파일로 저장
import recsys.algorithm
recsys.algorithm.VERBOSE = True&lt;/p&gt;
&lt;p&gt;from recsys.algorithm.factorize import SVD
svd = SVD()
svd.load_data(filename='data/ml-20m/ratings.csv', sep=',', format={'col':0, 'row':1, 'value' …&lt;/p&gt;</summary><content type="html">&lt;p&gt;python-recsys 따라하기&lt;br&gt;
http://ocelma.net/software/python-recsys/build/html/quickstart.html&lt;/p&gt;
&lt;p&gt;&lt;a href="https://grouplens.org/datasets/movielens/"&gt;ratings.csv 다운받는다&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;```python 사용자의 입력 모델화 하여 파일로 저장
import recsys.algorithm
recsys.algorithm.VERBOSE = True&lt;/p&gt;
&lt;p&gt;from recsys.algorithm.factorize import SVD
svd = SVD()
svd.load_data(filename='data/ml-20m/ratings.csv', sep=',', format={'col':0, 'row':1, 'value':2, 'ids': int})&lt;/p&gt;
&lt;p&gt;k = 100
svd.compute(k=k, min_values=10, pre_normalize=None, mean_center=True, post_normalize=True, savefile='/tmp/movielens')&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;역시나 책대로 되지는 않는다. 위의 7번째 라인이 약 3시간 30분을 잡아먹었는데, 결국은 아래와 같이 `MemoryError&amp;#39; 오류를 뱉어내버리고야 말았다. 아무래도 실행머신이 고급 성능을 가지지 않은 개인용 노트북이라고 결론을 짓기로 한다.

``` bash
/home/harry/.virt_env/recommends/lib/python2.7/site-packages/divisi2/sparse.pyc in squish(self, cutoff)
   1005                       for (val, row, col) in entries
   1006                       if row in rows and col in cols]
-&amp;gt; 1007         return SparseMatrix.from_named_entries(newentries).squish()
   1008 
   1009     # adds compatibility with SciPy-based methods

/home/harry/.virt_env/recommends/lib/python2.7/site-packages/divisi2/sparse.pyc in from_named_entries(tuples)
    418         If possible, use ``from_named_lists``, because it&amp;#39;s faster.
    419         &amp;quot;&amp;quot;&amp;quot;
--&amp;gt; 420         lists = zip(*tuples)
    421         if not lists: return SparseMatrix((0,0))
    422         return SparseMatrix.from_named_lists(*lists)

MemoryError: 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;python 파일로 저장된 모델을 객체로 읽어들인다
from recsys.algorithm.factorize import SVD
svd2 = SVD(filename='/tmp/movielens') # Loading already computed SVD model
ITEMID1 = 1    # Toy Story (1995)
ITEMID2 = 2355 # A bug's life (1998)
svd2.similarity(ITEMID1, ITEMID2)&lt;/code&gt;&lt;/p&gt;</content></entry><entry><title>"movies"</title><link href="/movies.html" rel="alternate"></link><published>2017-02-21T14:59:56+09:00</published><updated>2017-02-21T14:59:56+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-21:/movies.html</id><summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;날짜&lt;/th&gt;
&lt;th&gt;제목&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.19&lt;/td&gt;
&lt;td&gt;글래디에이터: 로마 영웅 탄생의 필수 가이드 비밀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;예정&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;분야&lt;/th&gt;
&lt;th&gt;제목&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;경제&lt;/td&gt;
&lt;td&gt;인사이드잡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;경제&lt;/td&gt;
&lt;td&gt;마진콜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;역사&lt;/td&gt;
&lt;td&gt;인생은 아름다워(La Vita E Bella, Life Is Beautiful 1997)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;역사&lt;/td&gt;
&lt;td&gt;프랑스 혁명&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SF&lt;/td&gt;
&lt;td&gt;스타워즈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary><content type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;날짜&lt;/th&gt;
&lt;th&gt;제목&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.19&lt;/td&gt;
&lt;td&gt;글래디에이터: 로마 영웅 탄생의 필수 가이드 비밀&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3&gt;예정&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;분야&lt;/th&gt;
&lt;th&gt;제목&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;경제&lt;/td&gt;
&lt;td&gt;인사이드잡&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;경제&lt;/td&gt;
&lt;td&gt;마진콜&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;역사&lt;/td&gt;
&lt;td&gt;인생은 아름다워(La Vita E Bella, Life Is Beautiful 1997)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;역사&lt;/td&gt;
&lt;td&gt;프랑스 혁명&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SF&lt;/td&gt;
&lt;td&gt;스타워즈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content></entry><entry><title>"emacs에서 파일명 변경하기"</title><link href="/emacseseo-pailmyeong-byeongyeonghagi.html" rel="alternate"></link><published>2017-02-20T18:03:19+09:00</published><updated>2017-02-20T18:03:19+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-20:/emacseseo-pailmyeong-byeongyeonghagi.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;C-x C-q and(파일명 편집) C-c C-C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pragmaticemacs.com/category/dired/"&gt;dired&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;C-x C-q and(파일명 편집) C-c C-C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pragmaticemacs.com/category/dired/"&gt;dired&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>"hadoop-docker"</title><link href="/hadoop-docker.html" rel="alternate"></link><published>2017-02-18T17:13:49+09:00</published><updated>2017-02-18T17:13:49+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-18:/hadoop-docker.html</id><summary type="html">&lt;p&gt;가상머신 3개를 준비하자.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Namenode 192.168.99.101
docker-machine start namenode; eval &amp;quot;$(docker-machine env namenode)&amp;quot;;

# Datanode1 192.168.99.102
docker-machine start datanode1; eval &amp;quot;$(docker-machine env datanode1)&amp;quot;;

# Datanode2 192.168.99.103
docker-machine start datanode2; eval &amp;quot;$(docker-machine env datanode2)&amp;quot;;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
namenode 192.168.99.101
datanode1 192.168.99.102
datanode2 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;가상머신 3개를 준비하자.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Namenode 192.168.99.101
docker-machine start namenode; eval &amp;quot;$(docker-machine env namenode)&amp;quot;;

# Datanode1 192.168.99.102
docker-machine start datanode1; eval &amp;quot;$(docker-machine env datanode1)&amp;quot;;

# Datanode2 192.168.99.103
docker-machine start datanode2; eval &amp;quot;$(docker-machine env datanode2)&amp;quot;;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...
namenode 192.168.99.101
datanode1 192.168.99.102
datanode2 192.168.99.103
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;각각의 가상머신에서 아래 명령어를 실행하여 필요한 hadoop 데몬을 실행하다.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# run hadoop-docker
docker run -it  -p 50070:50070 -p 8088:8088 sequenceiq/hadoop-docker /etc/bootstrap.sh -bash 
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"CeleryTestSuiteRunner NoseTestSuiteRunner 함께 사용하기"</title><link href="/celerytestsuiterunner-nosetestsuiterunner-hamgge-sayonghagi.html" rel="alternate"></link><published>2017-02-18T15:43:28+09:00</published><updated>2017-02-18T15:43:28+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-18:/celerytestsuiterunner-nosetestsuiterunner-hamgge-sayonghagi.html</id><summary type="html">&lt;p&gt;소프트웨어 관리에 있어서 테스트는 언제나 필수적인 과정이지만, 번고롭다. 특히 매번 테스트를 실행할 때마다 db 스키마를 생성(CREATE)하고, 기존에 정의해둔 fixture를 입력(INSERT)하는 과정을 거친다.
테스트 환경을 일관되도록 유지를 시켜준다는 장점이 있지만, 시간이 걸린다는 단점이 있다.  &lt;/p&gt;
&lt;p&gt;시간을 가지고 생각을 해보면, db scheme에 관련된 테스트 목적이 아니라면 때에 따라서 기존에 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;소프트웨어 관리에 있어서 테스트는 언제나 필수적인 과정이지만, 번고롭다. 특히 매번 테스트를 실행할 때마다 db 스키마를 생성(CREATE)하고, 기존에 정의해둔 fixture를 입력(INSERT)하는 과정을 거친다.
테스트 환경을 일관되도록 유지를 시켜준다는 장점이 있지만, 시간이 걸린다는 단점이 있다.  &lt;/p&gt;
&lt;p&gt;시간을 가지고 생각을 해보면, db scheme에 관련된 테스트 목적이 아니라면 때에 따라서 기존에 생성해둔 db를 그대로 이용하는 것도 똑똑한 선택일수 있다. 다행히 nose에서 이런 기능을 도와주는데, 방법은 환경변수 REUSE_DB의 값을 1로 설정하는 것이다.  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# settings.py&lt;/span&gt;
&lt;span class="n"&gt;TEST_RUNNER&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;django_nose.NoseTestSuiteRunner&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# 실행&lt;/span&gt;
&lt;span class="n"&gt;REUSE_DB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;settings_test&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;하지만 celery 비동기 task를 테스트 하는중 문제를 발견했다. 비동기 작업을 테스트중 실시간 결과를 확인하는 것이 아니라, Queue에 작업 요청을 한후 그대로 테스트는 종료된다. 이렇게 되면 원했던 기능확인을 할수 없게된다. 다시 검색을 해 본결과 TEST_RUNNER를 &lt;strong&gt;CeleryTestSuiteRunner&lt;/strong&gt;를 사용하라는 내용을 찾았다. 그 지시 그대로 따랐던 결과 &lt;strong&gt;NoseTestSuiteRunner'&lt;/strong&gt;의 장점은 사라졌다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TEST_RUNNER = 'djcelery.contrib.test_runner.CeleryTestSuiteRunner'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;또 다시 고민하여 검색결과 아래와 같이 두 Test Runner의 기능을 모두 사용할수 있는 코드를 찾게되었다.&lt;br&gt;
&lt;a href="http://stackoverflow.com/a/34282669/1118583"&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django_nose&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;NoseTestSuiteRunner&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;djcelery.contrib.test_runner&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CeleryTestSuiteRunner&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TestRunner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CeleryTestSuiteRunner&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NoseTestSuiteRunner&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p _="%" endcodeblock&gt;{% codeblock "settings.py" [line_number:(false)] %}
TEST_RUNNER = 'myapp.TestRunnser""&lt;/p&gt;</content></entry><entry><title>지식 창고</title><link href="/jisig-canggo.html" rel="alternate"></link><published>2017-02-14T13:38:04+09:00</published><updated>2017-02-14T13:38:04+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-14:/jisig-canggo.html</id><summary type="html">&lt;h2&gt;예정&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;날짜&lt;/th&gt;
&lt;th&gt;제목&lt;/th&gt;
&lt;th&gt;지은이&lt;/th&gt;
&lt;th&gt;특이사항&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788960863651"&gt;돈 되는 아파트 돈 안 되는 아파트&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;채상욱&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9791157745562"&gt;아기곰 재테크의 불변의 법칙&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;아기곰&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://book.daum.net/detail/book.do?bookid=KOR9791186615140"&gt;뉴스테이시대, 사야할 집 팔아야할 집&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;채상욱&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788947540759"&gt;아파트 제대로 고르는 법&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;심형석&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788901058030"&gt;부자 경제학&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;박경철&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788996634218"&gt;경제기사의 바다에 빠져라&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;최진기&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.&lt;/td&gt;
&lt;td&gt;관점 디자이너&lt;/td&gt;
&lt;td&gt;박용후&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2&lt;/td&gt;
&lt;td&gt;마지막 한 걸음은 혼자서 가야 한다 :정진홍의 900킬로미터 …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;h2&gt;예정&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;날짜&lt;/th&gt;
&lt;th&gt;제목&lt;/th&gt;
&lt;th&gt;지은이&lt;/th&gt;
&lt;th&gt;특이사항&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788960863651"&gt;돈 되는 아파트 돈 안 되는 아파트&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;채상욱&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9791157745562"&gt;아기곰 재테크의 불변의 법칙&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;아기곰&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://book.daum.net/detail/book.do?bookid=KOR9791186615140"&gt;뉴스테이시대, 사야할 집 팔아야할 집&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;채상욱&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788947540759"&gt;아파트 제대로 고르는 법&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;심형석&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788901058030"&gt;부자 경제학&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;박경철&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788996634218"&gt;경제기사의 바다에 빠져라&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;최진기&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.&lt;/td&gt;
&lt;td&gt;관점 디자이너&lt;/td&gt;
&lt;td&gt;박용후&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2&lt;/td&gt;
&lt;td&gt;마지막 한 걸음은 혼자서 가야 한다 :정진홍의 900킬로미터&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.3&lt;/td&gt;
&lt;td&gt;(만화) 비트겐슈타인 철학적 탐구&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;난이도 상&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;완료&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;날짜&lt;/th&gt;
&lt;th&gt;제목&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.&lt;/td&gt;
&lt;td&gt;글 쓸 줄 아는 사람이 되라 : 호모 스크리벤스&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2 .28&lt;/td&gt;
&lt;td&gt;(만화) 뉴턴 프린키피아. 27&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.23&lt;/td&gt;
&lt;td&gt;승려와 수수께끼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2&lt;/td&gt;
&lt;td&gt;파이썬 머신러닝 :최신 예측 분석 기반으로 깊은 통찰력을 얻는 머신러닝 필수 가이드&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.22&lt;/td&gt;
&lt;td&gt;나의 고전 읽기 : 우리 시대 최고의 지성10인이 말하는 나의 인생과 고전&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.17&lt;/td&gt;
&lt;td&gt;인공지능과 딥러닝 : 인공지능이 불러올 산업 구조의 변화와 혁신&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2&lt;/td&gt;
&lt;td&gt;하둡 프로그래밍 :빅데이터 분석을 위한 하둡 기초부터 YARN까지&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.16&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;orderClick=LEB&amp;amp;barcode=9788934934097"&gt;(만화)슘페터 자본주의 사회주의 민주주의&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.16&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788966260577&amp;amp;orderClick=LAH&amp;amp;Kc="&gt;린 스타트업&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.13&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791186805329&amp;amp;orderClick=LAH&amp;amp;Kc="&gt;나는 왜 괜찮은 아이디어가 없을까? :혁신적인 아이디어로 무장한 세계 1%들의 창의적 습관&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.11&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788997585823&amp;amp;orderClick=LAH&amp;amp;Kc="&gt;인생을 바꾸는 기적의 블로그&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.9&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788934934073&amp;amp;orderClick=LAH&amp;amp;Kc="&gt;(만화) 중용&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.9&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/search/SearchKorbookMain.jsp"&gt;(만화) 간디 자서전&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.3&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788934926726"&gt;(만화) 마키아벨리 군주론&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.1&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9788934927259"&gt;(만화)노자 도덕경&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791186560020&amp;amp;orderClick=LAH&amp;amp;Kc="&gt;조훈현, 고수의 생각법 : 생각은 반드시 답을 찾는다&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.1.31&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791185716435&amp;amp;orderClick=LAH&amp;amp;Kc="&gt;백년을 살아보니 : 인생의 황금기는 60~75세&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.1.25&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9791187289081&amp;amp;orderClick=LAH&amp;amp;Kc="&gt;배민다움 : 배달의민족 브랜딩 이야기&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.1.25&lt;/td&gt;
&lt;td&gt;&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&amp;amp;mallGb=KOR&amp;amp;barcode=9788990522535&amp;amp;orderClick=LAH&amp;amp;Kc="&gt;(세계를 움직인 CEO들의)발상과 역발상&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;---&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content></entry><entry><title>docker를 이용한 hadoop</title><link href="/dockerreul-iyonghan-hadoop.html" rel="alternate"></link><published>2017-02-13T17:12:32+09:00</published><updated>2017-02-13T17:12:32+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-13:/dockerreul-iyonghan-hadoop.html</id><summary type="html">&lt;h2&gt;categories: hadoop docker&lt;/h2&gt;
&lt;h3&gt;동기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;하둡의 병렬처리 특성을 확인하기 위해서는 2대 이상의 물리적인 컴퓨터가 필요하다&lt;/li&gt;
&lt;li&gt;실제로 물리적인 컴퓨터를 마련하기 위해서는 비용이 필요하다&lt;/li&gt;
&lt;li&gt;docker를 이용하면 가상의 운영체제를 가볍게 실행할수 있다는 얘기를 들어왔고, hadoop를 테스트하기에 적당하다고 판단하여 시도함&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;하둡 docker 이미지를 받자&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/sequenceiq/hadoop-docker"&gt;Apache Hadoop 2.7.1 Docker image&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;하둡 실행하기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker run …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;categories: hadoop docker&lt;/h2&gt;
&lt;h3&gt;동기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;하둡의 병렬처리 특성을 확인하기 위해서는 2대 이상의 물리적인 컴퓨터가 필요하다&lt;/li&gt;
&lt;li&gt;실제로 물리적인 컴퓨터를 마련하기 위해서는 비용이 필요하다&lt;/li&gt;
&lt;li&gt;docker를 이용하면 가상의 운영체제를 가볍게 실행할수 있다는 얘기를 들어왔고, hadoop를 테스트하기에 적당하다고 판단하여 시도함&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;하둡 docker 이미지를 받자&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/sequenceiq/hadoop-docker"&gt;Apache Hadoop 2.7.1 Docker image&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;하둡 실행하기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker run -it -p 50070:50070 sequenceiq/hadoop-docker /etc/bootstrap.sh -bash&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;하둡 정보를 웹UI로 확인하기&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;docker-machine&lt;/strong&gt; 명령어를 이용해 다커이미지를 실행하는 머신의 ip를 구한다&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ docker-machine env hoodpub

&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_TLS_VERIFY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tcp://192.168.99.100:2376&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_CERT_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/harry/.docker/machine/machines/hoodpub&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;DOCKER_MACHINE_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hoodpub&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# Run this command to configure your shell: #&lt;/span&gt;
&lt;span class="c1"&gt;# eval &amp;quot;$(docker-machine env hoodpub)&amp;quot; #&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;DOCKER_HOST&lt;/strong&gt;가 가진 값이 가상머신의 ip이므로 이 값을 기억하자.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Overview" src="/images/hadoop-overview.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://192.168.99.100:50070"&gt;http://192.168.99.100:50070&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>"Octopress 테마를 변경하자"</title><link href="/octopress-temareul-byeongyeonghaja.html" rel="alternate"></link><published>2017-02-13T16:56:51+09:00</published><updated>2017-02-13T16:56:51+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-13:/octopress-temareul-byeongyeonghaja.html</id><summary type="html">&lt;p&gt;https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd octopress
git submodule add GIT_URL .themes/THEME_NAME
rake install\[&amp;#39;THEME_NAME&amp;#39;\]
rake generate
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd octopress
git submodule add GIT_URL .themes/THEME_NAME
rake install\[&amp;#39;THEME_NAME&amp;#39;\]
rake generate
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>Celery beat를 Elasticbeanstalk에서도 사용하자</title><link href="/celery-beatreul-elasticbeanstalkeseodo-sayonghaja.html" rel="alternate"></link><published>2017-02-12T17:35:05+09:00</published><updated>2017-02-12T17:35:05+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-12:/celery-beatreul-elasticbeanstalkeseodo-sayonghaja.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p _="%" endcodeblock&gt;tip 1
{% codeblock lang:python title:"타스크를 모두 비우자" mark:3 %}
from celery.task.control import discard_all
    discard_all()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p _="%" endcodeblock&gt;Elasticbeanstalk 에서 실행을 위한 명령어
{% codeblock lang:python title:"98-celery.config"  %}
command=/opt/python/run/venv/bin/celery beat -A main -S djcelery.schedulers.DatabaseScheduler --pidfile=&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;celery beat&lt;/strong&gt;를 실행하면 &lt;strong&gt;celery worker …&lt;/strong&gt;&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;
&lt;p _="%" endcodeblock&gt;tip 1
{% codeblock lang:python title:"타스크를 모두 비우자" mark:3 %}
from celery.task.control import discard_all
    discard_all()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p _="%" endcodeblock&gt;Elasticbeanstalk 에서 실행을 위한 명령어
{% codeblock lang:python title:"98-celery.config"  %}
command=/opt/python/run/venv/bin/celery beat -A main -S djcelery.schedulers.DatabaseScheduler --pidfile=&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;celery beat&lt;/strong&gt;를 실행하면 &lt;strong&gt;celery worker&lt;/strong&gt;와 비슷한 task의 로그가 나타날 것으로 기대를 했다. 'Interval'과 'Crontab'으로 시간을 조정하며 결과를 확인해 보았으나 아래와 같은 기본적인 로그만이 나타났다&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ python manage.py celery beat -A main -S djcelery.schedulers.DatabaseScheduler --loglevel&lt;span class="o"&gt;=&lt;/span&gt;DEBUG   
celery beat v3.1.17 &lt;span class="o"&gt;(&lt;/span&gt;Cipater&lt;span class="o"&gt;)&lt;/span&gt; is starting.
DEBUG &lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,691 base &lt;span class="m"&gt;29568&lt;/span&gt; &lt;span class="m"&gt;139948070696768&lt;/span&gt; Configuring Raven &lt;span class="k"&gt;for&lt;/span&gt; host: &amp;lt;raven.conf.remote.RemoteConfig object at 0x7f481f84af50&amp;gt;
__    -    ... __   -        _
Configuration -&amp;gt;
    . broker -&amp;gt; amqp://guest:**@localhost:5672//
    . loader -&amp;gt; celery.loaders.app.AppLoader
    . scheduler -&amp;gt; djcelery.schedulers.DatabaseScheduler

    . logfile -&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;stderr&lt;span class="o"&gt;]&lt;/span&gt;@%DEBUG
    . maxinterval -&amp;gt; now &lt;span class="o"&gt;(&lt;/span&gt;0s&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,880: DEBUG/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; DatabaseScheduler: intial &lt;span class="nb"&gt;read&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,880: INFO/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; Writing entries...
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,890: DEBUG/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; DatabaseScheduler: Fetching database schedule
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,902: DEBUG/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; Current schedule:
&amp;lt;ModelEntry: celery.backend_cleanup celery.backend_cleanup&lt;span class="o"&gt;(&lt;/span&gt;*&lt;span class="o"&gt;[]&lt;/span&gt;, **&lt;span class="o"&gt;{})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&amp;gt;
&amp;lt;ModelEntry: core.tasks.scraper_example core.tasks.scraper_example&lt;span class="o"&gt;(&lt;/span&gt;*&lt;span class="o"&gt;[]&lt;/span&gt;, **&lt;span class="o"&gt;{})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&amp;gt;
&amp;lt;ModelEntry: t1 core.tasks.test&lt;span class="o"&gt;(&lt;/span&gt;*&lt;span class="o"&gt;[]&lt;/span&gt;, **&lt;span class="o"&gt;{})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&amp;gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,931: INFO/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; DatabaseScheduler: Schedule changed.
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,931: INFO/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; Writing entries...
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,931: DEBUG/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; DatabaseScheduler: Fetching database schedule
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,936: DEBUG/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; Current schedule:
&amp;lt;ModelEntry: celery.backend_cleanup celery.backend_cleanup&lt;span class="o"&gt;(&lt;/span&gt;*&lt;span class="o"&gt;[]&lt;/span&gt;, **&lt;span class="o"&gt;{})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&amp;gt;
&amp;lt;ModelEntry: core.tasks.scraper_example core.tasks.scraper_example&lt;span class="o"&gt;(&lt;/span&gt;*&lt;span class="o"&gt;[]&lt;/span&gt;, **&lt;span class="o"&gt;{})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&amp;gt;
&amp;lt;ModelEntry: t1 core.tasks.test&lt;span class="o"&gt;(&lt;/span&gt;*&lt;span class="o"&gt;[]&lt;/span&gt;, **&lt;span class="o"&gt;{})&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&amp;gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;-02-13 &lt;span class="m"&gt;16&lt;/span&gt;:19:33,952: INFO/MainProcess&lt;span class="o"&gt;]&lt;/span&gt; Writing entries...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;여러 시행착오를 거친결과 &lt;strong&gt;beat&lt;/strong&gt;는 &lt;strong&gt;worker&lt;/strong&gt;에게 정해진 시간만 알려주는 역할만 한다는 것을 알았다. 그리고 실제 작업은 &lt;strong&gt;work&lt;/strong&gt;가 책임진다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;작업 확인을 위해서는 &lt;strong&gt;beat&lt;/strong&gt;와 &lt;strong&gt;worker&lt;/strong&gt; 동시에 실행을 하자.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py celery worker -A main --loglevel=DEBUG
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python manage.py celery beat -A main -S djcelery.schedulers.DatabaseScheduler --loglevel=DEBUG
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>대구 개발자 모임-하둡</title><link href="/daegu-gaebalja-moim-hadub.html" rel="alternate"></link><published>2017-02-12T16:43:48+09:00</published><updated>2017-02-12T16:43:48+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-12:/daegu-gaebalja-moim-hadub.html</id><summary type="html">&lt;h2&gt;모임&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;장소 : 아이원 유학스터디룸&lt;/li&gt;
&lt;li&gt;일자 : 2017년 2월 11&lt;/li&gt;
&lt;li&gt;slack : https://daegugroup.slack.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;느낀 점&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;고향 근처에서 개발에 관심있으신 분들과 만날 수 있어 기쁘다.&lt;/li&gt;
&lt;li&gt;하둡 분야의 전무가가 없었지만, 함께 고민하고 답을 찾는 과정들이 의미있게 느껴졌다.&lt;/li&gt;
&lt;li&gt;옆에 계셨던 분이 아래 책의 저자라는 사실을 집에 오며 알게 되었다.&lt;br&gt;
&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9791158390525"&gt;쉽고 빠르게 배우는 Angular …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;h2&gt;모임&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;장소 : 아이원 유학스터디룸&lt;/li&gt;
&lt;li&gt;일자 : 2017년 2월 11&lt;/li&gt;
&lt;li&gt;slack : https://daegugroup.slack.com/&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;느낀 점&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;고향 근처에서 개발에 관심있으신 분들과 만날 수 있어 기쁘다.&lt;/li&gt;
&lt;li&gt;하둡 분야의 전무가가 없었지만, 함께 고민하고 답을 찾는 과정들이 의미있게 느껴졌다.&lt;/li&gt;
&lt;li&gt;옆에 계셨던 분이 아래 책의 저자라는 사실을 집에 오며 알게 되었다.&lt;br&gt;
&lt;a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?barcode=9791158390525"&gt;쉽고 빠르게 배우는 Angular 2 프로그래밍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>힐월드 기능정리</title><link href="/hilweoldeu-gineungjeongri.html" rel="alternate"></link><published>2017-02-12T16:40:16+09:00</published><updated>2017-02-12T16:40:16+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-12:/hilweoldeu-gineungjeongri.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;현재 위치 반경내 검색&lt;/li&gt;
&lt;li&gt;댓글 작성시에 문자로 전송정리&lt;/li&gt;
&lt;li&gt;세부 페이지에서 '전화걸기' 버튼으로 등록자에게 전화걸기&lt;/li&gt;
&lt;li&gt;물건 등록자와 나와의 위치 간단히 확인하기&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% img /images/main_healworld.png %}&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.healworld.co.kr"&gt;https://www.healworld.co.kr&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;현재 위치 반경내 검색&lt;/li&gt;
&lt;li&gt;댓글 작성시에 문자로 전송정리&lt;/li&gt;
&lt;li&gt;세부 페이지에서 '전화걸기' 버튼으로 등록자에게 전화걸기&lt;/li&gt;
&lt;li&gt;물건 등록자와 나와의 위치 간단히 확인하기&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% img /images/main_healworld.png %}&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.healworld.co.kr"&gt;https://www.healworld.co.kr&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>"아이디어 창고"</title><link href="/aidieo-canggo.html" rel="alternate"></link><published>2017-02-05T17:41:47+09:00</published><updated>2017-02-05T17:41:47+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-02-05:/aidieo-canggo.html</id><summary type="html">&lt;hr&gt;
&lt;h2&gt;신문요약&lt;/h2&gt;
&lt;h4&gt;동기&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;설명&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;여러 매체의 신문은 내용이 많아 읽는데 시간이 걸린다.&lt;/li&gt;
&lt;li&gt;카테고리별로 각 신문사별로 중요하다고 생각되는 토픽을 찾는다.&lt;/li&gt;
&lt;li&gt;선별된 내용중 사실만 선별해 내어 짥은 문장으로 정리하여 서비스 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;재미요소&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;신문을 읽을 수 있는 시간 절약&lt;/li&gt;
&lt;li&gt;균현있게 세상 돌아가는 흐름을 볼 수 있다&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open toilet&lt;/h2&gt;
&lt;h4&gt;동기&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;낯선 곳에서는 화장실을 찾는 다는 …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;hr&gt;
&lt;h2&gt;신문요약&lt;/h2&gt;
&lt;h4&gt;동기&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;설명&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;여러 매체의 신문은 내용이 많아 읽는데 시간이 걸린다.&lt;/li&gt;
&lt;li&gt;카테고리별로 각 신문사별로 중요하다고 생각되는 토픽을 찾는다.&lt;/li&gt;
&lt;li&gt;선별된 내용중 사실만 선별해 내어 짥은 문장으로 정리하여 서비스 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;재미요소&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;신문을 읽을 수 있는 시간 절약&lt;/li&gt;
&lt;li&gt;균현있게 세상 돌아가는 흐름을 볼 수 있다&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Open toilet&lt;/h2&gt;
&lt;h4&gt;동기&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;낯선 곳에서는 화장실을 찾는 다는 것은 쉽지 않다.&lt;/li&gt;
&lt;li&gt;생리적으로 시급한 상황이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;설명&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;https://www.data.go.kr 에서 제공하는 지역별 화장실 데이타를 시작한다.&lt;/li&gt;
&lt;li&gt;모바일 사용자의 현재 위치를 기준으로 주변 화장실을 보여준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;재미요소&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;와이파이 가용여부를 사용자들이 기록하게 하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;발전계획&lt;/h3&gt;
&lt;p&gt;제안자 : 현민&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;장비창고&lt;/h2&gt;
&lt;h4&gt;동기&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;포크레인 인력의 수요와 공급이 온라인으로 투명하게 관리되고 있지 않다.&lt;/li&gt;
&lt;li&gt;숨어있는 O2O 변화가 될 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;설명&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;포크레인으로 작업할 수 있는 인력을 확보한다.&lt;/li&gt;
&lt;li&gt;포크레인 인력이 필요한 업체를 확보한다.&lt;/li&gt;
&lt;li&gt;수요와 공급을 손쉽게 연결시켜줄 앱을 개발한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;편리요소&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;노동력을 제공할 인력이 일일이 업체에 전화로 작업 유무를 확인할 필요없다.&lt;/li&gt;
&lt;li&gt;많은 노력인력이 등록이 되어 있을 수록 이른 시간에 작업을 시작할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;발전계획&lt;/h3&gt;
&lt;p&gt;제안자 : 호성&lt;/p&gt;
&lt;hr&gt;</content></entry><entry><title>"healworld 방문 그래프"</title><link href="/healworld-bangmun-geuraepeu.html" rel="alternate"></link><published>2017-01-21T15:20:53+09:00</published><updated>2017-01-21T15:20:53+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2017-01-21:/healworld-bangmun-geuraepeu.html</id><summary type="html">&lt;p&gt;&lt;img alt="/images/healworld-ga-201702.png" src="/images/healworld-ga-201702.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="/images/healworld-ga-201702.png" src="/images/healworld-ga-201702.png"&gt;&lt;/p&gt;</content></entry><entry><title>"mp4-mp3"</title><link href="/mp4-mp3.html" rel="alternate"></link><published>2015-06-28T17:51:24+09:00</published><updated>2015-06-28T17:51:24+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2015-06-28:/mp4-mp3.html</id><summary type="html">&lt;h3&gt;우분투용용의 avconv 이용&lt;/h3&gt;
&lt;p&gt;``` bash 형식
avconv  -i [영상파일] -vn  [소리파일]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;``` bash 예시
avconv  -i Into.the.Wild.2007.1080p.BluRay.x264.YIFY.mp4 -vn Into.the.Wild.2007.1080p.BluRay.x264.YIFY.mp3
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h3&gt;우분투용용의 avconv 이용&lt;/h3&gt;
&lt;p&gt;``` bash 형식
avconv  -i [영상파일] -vn  [소리파일]&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;``` bash 예시
avconv  -i Into.the.Wild.2007.1080p.BluRay.x264.YIFY.mp4 -vn Into.the.Wild.2007.1080p.BluRay.x264.YIFY.mp3
&lt;/pre&gt;&lt;/div&gt;</content></entry><entry><title>"touchpad는 오른손 잡이로, mouse는 왼손 잡이로 설정하기"</title><link href="/touchpadneun-oreunson-jabiro-mouseneun-oenson-jabiro-seoljeonghagi.html" rel="alternate"></link><published>2015-01-18T17:53:38+09:00</published><updated>2015-01-18T17:53:38+09:00</updated><author><name>hyunmin</name></author><id>tag:None,2015-01-18:/touchpadneun-oreunson-jabiro-mouseneun-oenson-jabiro-seoljeonghagi.html</id><summary type="html">&lt;p&gt;ubuntu에서 touchpad는 오른손 잡이로, mouse는 왼손 잡이로 설정하기&lt;/p&gt;
&lt;p&gt;우분투 설정에서 mouse는 왼손 잡이로 설정
아래 명령어를 이용하여 마우스 버튼 배치만 변경&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xinput set-button-map &lt;span class="s1"&gt;&amp;#39;Logitech USB Optical Mouse&amp;#39;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;ubuntu에서 touchpad는 오른손 잡이로, mouse는 왼손 잡이로 설정하기&lt;/p&gt;
&lt;p&gt;우분투 설정에서 mouse는 왼손 잡이로 설정
아래 명령어를 이용하여 마우스 버튼 배치만 변경&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;xinput set-button-map &lt;span class="s1"&gt;&amp;#39;Logitech USB Optical Mouse&amp;#39;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content></entry></feed>