{"pages":[{"title":"Search - Water Developer\n","text":"\n\n\nSearch - Water Developer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nToggle navigation\n\n\n\n\n\nWater Developer            \n\n\n\n\nDev\n\n\nMisc\n\n\n문장\n\n\n세바시\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSocial\n\n Github\n\n\n\n\n\nLinks\n\n\nPelican\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n© 2018 Hyunmin\n            · Powered by pelican-bootstrap3,\n            Pelican,\n            Bootstrap \n Back to top\n\n\n\n\n\n\n\n\n\n\n\n        var _gaq = _gaq || [];\n        _gaq.push(['_setAccount', 'UA-91188832-2']);\n        _gaq.push(['_trackPageview']);\n\n        (function () {\n            var ga = document.createElement('script');\n            ga.type = 'text/javascript';\n            ga.async = true;\n            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n            var s = document.getElementsByTagName('script')[0];\n            s.parentNode.insertBefore(ga, s);\n        })();\n    \n\n\n\n\n    $(document).ready(function() {\n      $('#tipue_search_input').tipuesearch({\n        'mode' : 'json',\n        'show': 10,\n        'newWindow': false,\n        'contentLocation': 'tipuesearch_content.json'\n      });\n    });\n    \n\n","tags":"","url":"https://harry81.github.io/_include/search.html"},{"title":"만만한 소통","text":"누구나 소통이 필요하다고 말하지만, 사실은 대꾸없이 내 말을 들어줄 만만한 상대가 필요할 뿐이다.","tags":"문장","url":"만만한-소통.html"},{"title":"마우스는 키보드보다 빠르다","text":"동기 이유 칼퇴근 어깨 통증 시간을 아끼기 위해 배경지식 image:key board image:learning keyboard 예시 gmail youtube jira slack","tags":"misc","url":"마우스는-키보드보다-빠르다.html"},{"title":"3D 출력","text":"Tools https://www.blender.org/ https://ultimaker.com/ Refs https://www.thingiverse.com","tags":"misc","url":"3D-출력.html"},{"title":"Apn labday (amazon emr 빅데이터 처리)","text":"날짜 : 2018년 9월 11일(화) 09:30 - 13:30 위치 : 서울 강남구 논현로 508 GS Tower 12층 101호 https://goo.gl/maps/9QPsbfp3dRA2 스케치 세션 구성 Data lake EMR 이론 EMR hands on","tags":"misc","url":"apn-labday-(amazon-emr-빅데이터-처리).html"},{"title":"Pycon 2018 방문","text":"일정표 https://www.pycon.kr/2018/program/schedule/ 스케치 전면 Keynote 전경1 전경2 Speech To text 딥러닝을 이용한 로그 기반의 게임 AI 개발 - 김선태 / suntae_kim Callosum: An RPC Tranport Library - 김준기 / joongi Topic Modeling & Word Embedding 그리고 화장품 - 이홍주 / lee_hongjoo 파이썬에 switch문 넣기 : 새 구문을 만들면서 배우는 파이썬 내부 - 성우경 / ukysung 기억나는 점 행동강령(평등, 공개) EVERYBODY PAYS Dive into Diversity, 파이콘 한국 2018 비전문가에게 다가갈수 있는 언어(심리학, 언어학, 예술) 대학생 및 여성 참가자의 숫자가 눈에 띄게 증가한 듯(Django girls, women who code) 긴급 chatbot 세션(http://www.scatterlab.co.kr/) 배운점 C로 만들어진 Python 배움과 자만은 물과 기름 다양한 분야의 사람들과 대화(요기요, hyperconnect, ODK) TDD 를 통해 문제의 본질을 바라볼 수 있다.","tags":"dev","url":"pycon-2018-방문.html"},{"title":"Kakao chatbot","text":"언어별 질문에 대한 대답 장점 각 질문의 언어에 해당하는 답을 제공 정해진 질문에 한해서는 사람의 손을 거치지 않고 실시간 응답 가능 kakao talk 뿐 아니라 다른 chat app 에 통합 가능 남은작업 대화의 재미를 위해 가능한 질의/응답 개수를 늘린다. 데모 이 기능이 필요한 예상 사용자 여러 외국어로 정보를 제공해야하지만, 해당 언어가 편하지 않은 경우 24시간 채팅앱으로 정보를 제공해야 하는 경우","tags":"misc","url":"kakao-chatbot.html"},{"title":"Sprint meeting","text":"필요성 완료 작업 예정 작업 회고 - 목적","tags":"misc","url":"sprint-meeting.html"},{"title":"Working in a standing position","text":"장점 소화가 잘 되는 느낌 허리 근육에 힘이 생겨, 허리를 펴고 식사를 할 수 있다. 일하는 동료들을 내려다 볼 수 있다. 소통하기에 유리하다. 단점 무릎 관절에 체중이 실린다. 집중에서 깨어나기 쉽다.","tags":"misc","url":"working-in-a-standing-position.html"},{"title":"Generate random password","text":"date | md5sum | base64 | head -c 32; echo 참고 : https://www.howtogeek.com/howto/30184/10-ways-to-generate-a-random-password-from-the-command-line/","tags":"misc","url":"generate-random-password.html"},{"title":"Delete merged branches","text":"master branch git branch --merged origin/master | egrep -v \"(&#94;\\*|master|develop)\" | xargs -n 1 git branch -d git push --delete origin `git branch -r --merged origin/master | egrep -v \"(&#94;\\*|master|develop)\" | sed 's/origin\\///'` develop branch git branch --merged origin/develop | egrep -v \"(&#94;\\*|master|develop)\" | xargs -n 1 git branch -d git push --delete origin `git branch -r --merged origin/develop | egrep -v \"(&#94;\\*|master|develop)\" | sed 's/origin\\///'`","tags":"misc","url":"delete-merged-branches.html"},{"title":"Youtube동영상 mp3로 저장하기","text":"집에는 인터넷이 되지 않는다. 어떻게 하면 youtube 내용을 집에서 들을수 있을까? youtube-dl -x --audio-format mp3 ACn9IaIYVyU &","tags":"misc","url":"youtube동영상-mp3로-저장하기.html"},{"title":"Demo of tmuxifier","text":"개발자가 터미널에서 작업을 하는 경우, 보통 하나로는 충분하지 않은 상황이 있다. 성향에 따라 다르겠지만 보통은 2개 이상이 필요할 수 있다. 같은 작업을 위해 매일 같은 탭을 열고 닫는다면 시간과 그 키보드 타이핑이 소모적이지 않을까. 더 나은 방법은 없을까? 목적 자주 사용하는 탭들을 하나의 layout에 저장하여, 단일 명령어를 통해서 불러온다. 데모 설명 tmuxifier s blog 실행 미리 정의된 layout 를 따라서 3개의 탭을 가진다. 상단 : 작업에 필요한 명령어를 실행할 공간 하단 좌측 : 서비스를 실행시켜둔다. 서버에 대한 정보를 출력하도록 설정 하단 우측 : 하단 좌측 서비스 외에 수시로 참고할 내용을 출력하도록 함 참고 https://github.com/jimeh/tmuxifier","tags":"dev","url":"demo-of-tmuxifier.html"},{"title":"Your account is compromised","text":"Your AWS account XXXXXXXXXX is compromised 이상한 이메일 6월 어느날, 개인 프로젝트에 사용하는 AWS 계정을 통해서 위와 같은 제목의 이메일이 날라왔다. 영어로 가득찬 내용이라 대수롭지 않게 여기고 점심을 먹으러 다녀옴. 그리고는 한 다섯 시간정도 지난뒤 새로운 메일이 도착했다. \"Amazon EC2 Instance scheduled for retirement\" 이거는 좀 이상하다는 생각이 들었다. 내가 사용하는 계정에서 운용중인 인스턴스는 지난달에 모두 정리했기 때문이다. 귀찮은 생각이 들었지만 AWS Console에 방문해서 어떤 인스턴스인지 확인하고 싶었다. 가벼운 마음으로 로그인을 하고 주로 사용하는 \"EC2 Dashboard\" 를 선택했다. 짦은 시간을 기다리며 우측 상단의 리전을 보았다. \"N. California\" 였다. 주로 \"Seoul\" 리전에서 작업을 하는데, 가끔씩 다른 리전에 방문이 되곤한다. 화면이 전부 로딩이 되면 다시 \"Seoul\"로 바꿔야지 생각했다. 그리고 나타나는 화면에 땀이 등줄기를 타고 내렸다. 내 것이 아닌 인스턴스 20개의 인스턴스가 초록색을 띄며 열심히 Running하고 있다. 그리고 각각의 인스턴스는 AWS document에서 몇 번 보았지만 너무나 내것이 아닐 것만 같았던 type이다. 대부분이 아래와 같았다. c3.8xlarge d2.8xlarge c5.18xlarge m4.16xlarge i3.16xlarge d2.8xlarge 그리고는 다시 'Seoul' 리전으로 이동해 보았다. 비슷한 화면이 보인다. 침착한 마음으로 내가 선택가능한 모든 지역의 인스턴스를 확인해 보았다. 각 지역별 EC2 현황을 보기 위해 크롬 부라우저에서 모두 탭들로 열어보았다. 이전에 열어 두었던 탭들과 지역별 EC2 탭들 덕분에 크롬이 무거워지는 것은 느낀다. 그리고 각 리전에서 모두 20개씩 인스턴스가 돌고 있는 것을 보니 내 마음도 무거워 진다. 지역(대략 12개) * 인스턴스(20개) 는 240개, 그리고 각 인스턴스가 꽤나 묵직하다는 것을 생각하니 엄청난 비용이 나오겠다고 암산을 해본다. 원인 분석은 추후에 하기로 하고 일딴 코앞에 불을 끄기로 생각했다. 우선 서울리전으로 향했다. Running 상태의 모든 인스턴스를 한 번에 선택해서 Terminate 하면 금방 해결될 일이다. 그런데 이게 왠걸. \"Termination Protection\" 가 활성화 되어 있다. 바로 진행할 수 없다. 그렇다고 \"Termination Protection\" 비활성화 작업은 인스턴스를 모두 선택해 한번에 할 수 없고, 일일이 바꿔주어야 한다. (혹시 CLI 가능한 방법이 있는지 알아봐야겠다.) 입에서 조용히 욕이 나온다. 여기까지는 상황 인식이 모두 끝났다. 상황 정리 문제 해결을 위해서 할 작업은 명확하다. - 각 인스턴스의 \"Termination Protection\" 을 비활성화 시킨다. - 비활성화된 인스턴스를 \"Terminate\" 한다. - 이 작업을 각 리전을 돌며 반복한다. 생각보다 시간이 많이 걸렸다. 뭔가 CLI라 가능하지 않을까 생각이 들었다. 하지만 너무 당황한 나머지 머리는 회전하지 않고, 손만 바빠진다. 이와 동시에 AWS에 CASE를 만들어 상황을 공유하고 도움을 받았다. - 기존에 만들어진 root account keys 모두 제거 - IAM account에서 관리하는 모든 keys 제거 상황이 정리되고 하루가 채 가기전에 다시 이런 문제를 되풀이 하지 말자는 생각에 글을 남겨본다. 여전히 위 사건으로 발생한 큰 비용을 어떻게 처리할수 있을지 걱정이다. 내 것인 비용 회고 한 IAM account 가 작업할 수 있는 지역을 한정하자. aws_access_key_id, aws_secret_access_key 가 git repo에 딸려 올라가지 않는지 항상 주의하자. \"Termination Protection\" 을 CLI로 작업할 수 있는지 확인 AWS meetup 운영자님들과 평소에 친하게 지내자.","tags":"dev","url":"your-account-is-compromised.html"},{"title":"konlpy 테그별 명사 추출 결과","text":"한글 형태소 분석기를 이용하여 명사를 추출 기능을 각 테그별로 확인해 보았습니다. 예제 데이타는 중고나라의 게시물중 일부를 얻어서 테스트해 보았습니다. 참고 문서 http://konlpy.org/en/v0.4.4/api/konlpy.tag/ 게시판 제목 추출 https://github.com/harry81/naver_api from konlpy.utils import pprint from konlpy.tag import Kkma , Twitter , Komoran , Hannanum komoran = Komoran () twitter = Twitter () kkma = Kkma () hannaum = Hannanum () taggers = [ kkma , twitter , komoran , hannaum ] lines = [] for ele in res : lines . append ( \"-\" * 30 ) lines . append ( \"** %s ** \\n \" % ele . get ( 'title' )) for tag in taggers : lines . append ( \" - %s %s \" % ( tag . __class__ . __name__ , tag . nouns ( ele . get ( 'title' )))) 지오다노 5부 반바지 Kkma ['노', '5', '5부', '부', '반바지'] Twitter ['지오다노', '부', '반바지'] Komoran ['지오다노', '부', '반바지'] Hannanum ['지오다노', '5부', '반바지'] cgv.메가박스 영화 예매.쥬라기월드2.탐정.독전 Kkma ['메가', '메가박스', '박스', '영화', '예매', '쥬라기', '쥬라기월드2', '월드', '2', '탐정', '독전'] Twitter ['메가박스', '영화', '예매', '쥬라기', '월드', '탐정', '독전'] Komoran ['메가박스', '영화', '예', '쥬라기', '월드', '탐정', '독', '전'] Hannanum ['메가박스', '영화', '예매', '쥬라기월드2', '탐정', '독전'] 플스팔아요 Kkma ['플스팔아'] Twitter ['플스'] Komoran ['플스'] Hannanum ['플스팔아요'] 새상품 모데스트무드 제작 데님 판매합니다 Kkma ['새', '새상품', '상품', '데', '데스트무드', '스트', '무드', '제작', '데님', '판매'] Twitter ['새', '상품', '모', '데스', '트무드', '제작', '데님', '판매'] Komoran ['상품', '제작', '데님', '판매'] Hannanum ['새상품', '모데스트무드', '제작', '데님', '판매'] 레이져 레벨기 대구 Kkma ['레이', '레벨', '대구'] Twitter ['레이져', '레벨', '기', '대구'] Komoran ['레이져', '레벨', '대구'] Hannanum ['레이져', '레벨기', '대구'] 6/17(일) 잠실 기아타이거즈 응원석 2연석 Kkma ['6', '17', '일', '잠', '잠실', '실', '기아', '기아타이거즈', '타이', '거즈', '응원석', '2', '2연석', '연석'] Twitter ['일', '잠실', '기아', '타이거즈', '응원', '석', '연석'] Komoran ['일', '잠실', '기아타이거즈', '응원', '석', '연석'] Hannanum ['(일)', '잠실', '기아타이거즈', '응원석', '2연석'] 샘소나이트 몬도 MONDO 김수현 백팩 브라운 5만원에 팝니다~~ Kkma ['샘', '샘소나이트', '소', '나이트', '김', '현', '백', '백팩', '팩', '브라운', '5', '5만원', '만', '원', '팝'] Twitter ['샘소나이트', '몬', '김수현', '백팩', '브라운', '만원'] Komoran ['샘소나이트', '몬', '김수현', '팩', '브라운', '원'] Hannanum ['샘소나이트', '몬', '김수현', '백팩', '브라운', '5만원', '팝니다'] 빌트인 3구 가스레인지 하츠 GC-3603SDS 팔아요~~ Kkma ['빌트인', '3', '3구', '구', '가스', '가스레인지', '레인지', '하츠'] Twitter ['빌트', '구', '가스레인지', '하츠'] Komoran ['빌트', '3구', '가스레인지'] Hannanum ['빌트', '3구', '가스레인지', '하츠', 'GC-3603SDS'] [중나VIP] 마크로스 프론티어 작별의날개 쉐릴/란카(C상/D상), 비치퀸 센토 이스즈, 고전대물 빅스케일 DX 수송기 (다이쥬피터) 팝니다. Kkma ['중', '나', '마크', '마크로스', '로스', '프', '프론', '론', '작별', '날개', '쉐릴', '카', '상', '비치', '비치퀸', '퀸', '토', '스즈', '고전', '고전대물', '대물', '빅', '빅스케일', '스케일', '수송기', '다이', '다이쥬피터', '쥬', '피터'] Twitter ['중', '마크로스', '프론티어', '작별', '날개', '쉐릴', '란카', '상', '상', '비치', '퀸', '센토', '이스', '즈', '고전', '대물', '빅스', '케일', '수송기', '쥬', '피터'] Komoran ['중', '마크로스 프론티어', '작별', '날개', '쉐리', '란', '카', '상', '상', '비치', '퀸', '센토', '전대물', '빅', '스케일', '수송기', '다이', '쥬', '피터'] Hannanum ['[중나VIP]', '마크로스', '프론티어', '작별의날개', '),', '비치퀸', '센토', '이스즈,', '고전대물', '빅스케', '수송기', '(다이쥬피터)'] [공유] GP스카이 갤럭시온7 2016 카드 케이스 G610 Kkma ['공유', '스카이', '럭', '럭시온7', '시온', '7', '2016', '카드', '케이스', '610'] Twitter ['공유', '스카이', '갤럭시', '온', '카드', '케이스'] Komoran ['공유', '스카이', '갤럭시', '카드', '케이스'] Hannanum ['공유', '스카이', '갤럭시온7', '2016', '카드', '케이스', 'G610'] 영화 전단지 팸플릿 팜플렛 포스터 판매합니다 Kkma ['영화', '전단지', '팸플릿', '팜플렛', '포스터', '판매'] Twitter ['영화', '전단지', '팸플릿', '팜플렛', '포스터', '판매'] Komoran ['영화', '전단지', '팸플릿', '팜플렛', '포스터', '판매'] Hannanum ['영화', '지', '팸플릿', '팜플렛', '포스터', '판매'] short board 긴팔 상의 블랙 S 사이즈 팝니다 Kkma ['긴팔', '상의', '블랙', '사이즈'] Twitter ['팔', '상의', '블랙', '사이즈'] Komoran ['긴팔', '상', '블랙', '사이즈'] Hannanum ['긴팔', '상', '블랙', '사이즈', '팝니다'] [공식앱] 미니 사각 퍼프 Kkma ['공식', '공식앱', '앱', '미니', '사각', '퍼프'] Twitter ['공식', '앱', '미니', '사각', '퍼프'] Komoran ['공식', '앱', '미니', '사각', '퍼프'] Hannanum ['[공식앱]', '사각', '퍼프'] 조던1 미드 메탈릭실버 260 Kkma ['조', '1', '미드', '메탈', '메탈릭실버', '릭', '실버', '260'] Twitter ['조던', '미드', '메탈', '릭', '실버'] Komoran ['조던', '미드', '메탈릭', '실버'] Hannanum ['조던1', '미드', '메탈릭실버', '260'] [대전] LG터치폴더 TN-K280N 그레이 가개통 팝니다 Kkma ['대전', '터치', '터치폴더', '폴더', '그레이', '가개통', '개통'] Twitter ['대전', '터치', '폴더', '그레이', '개통'] Komoran ['대전', '터치', '폴더', '그레이', '개통'] Hannanum ['대전', 'LG터치폴더', 'TN-K280N', '그레이', '가개통', '팝니다'] 돌체앤가바나 / 컬렉션 메인 캐시미어 보카시 니트 / 48 Kkma ['돌체', '돌체앤가바', '앤', '바', '컬렉션', '메인', '캐시미어', '보', '보카시', '카시', '니트', '48'] Twitter ['돌체앤가바나', '컬렉션', '메인', '캐시미어', '보', '카시', '니트'] Komoran ['돌체앤가바나', '컬렉션', '메인', '캐시미어', '보', '카시', '니트'] Hannanum ['돌체앤가바나', '컬렉션', '메', '캐시미', '보카시', '니트', '48'] 아기 여름 옷 정리합니다 Kkma ['아기', '여름', '옷', '정리'] Twitter ['아기', '여름', '옷'] Komoran ['아기', '여름', '옷', '정리'] Hannanum ['아기', '여름', '옷', '정리'] 명품가죽백.부르노마리 Kkma ['명품', '명품가죽백', '가죽', '백', '부', '부르노마리', '르노', '마리'] Twitter ['명품', '가죽', '마리'] Komoran ['명품', '가죽', '백', '부', '르노', '마리'] Hannanum ['명품가죽백', '부르노마'] 아이폰 6플러스 슈피겐 케이스 (범퍼) Kkma ['아이', '아이폰', '폰', '6', '6플러스', '플러스', '슈', '슈피겐', '피', '겐', '케이스', '범퍼'] Twitter ['아이폰', '플러스', '슈피겐', '케이스', '범퍼'] Komoran ['아이폰', '플러스', '케이스'] Hannanum ['아이폰', '6플러스', '슈피겐', '케이스', '범퍼'] 카이저 모바일쿠폰 150000원짜리 팝니다 g7용 Kkma ['카이저', '모바일', '모바일쿠폰', '쿠폰', '150000', '150000원', '원', '7', '7용', '용'] Twitter ['카이저', '모바일', '쿠폰', '원', '용'] Komoran ['카이저', '모바일', '쿠폰', '원'] Hannanum ['카이저', '모바일쿠폰', '150000원', 'g7용'] [미개봉] 시게이트 4TB 아이언울프 하드 팝니다. ST4000VN008 Kkma ['미', '미개봉', '개봉', '시', '시게이트', '게이트', '4', '아이언', '프', '하드', '4000', '008'] Twitter ['미개', '봉', '시게이트', '아이언', '울프', '하드'] Komoran ['미', '개봉', '시게이트', '아이언', '울프', '하드'] Hannanum ['미개봉', '시게이트', '4TB', '아이언울프', '하드', 'ST4000VN008'] 까르띠에 여자반지 - 플래티넘 다이아몬드~#47 Kkma ['르', '르띠', '띠', '여자', '여자반지', '반지', '플래', '플래티넘', '티', '넘', '다이', '다이아몬드', '아몬드', '47'] Twitter ['까르띠', '여자', '반지', '플래티넘', '다이아몬드'] Komoran ['까르띠에', '여자', '반지', '플래티넘', '다이아몬드'] Hannanum ['까르띠', '여자반지', '플래티넘', '다이아몬드~#47'] 제일 타카 F422,판매합니다. Kkma ['제일', '422', '판매'] Twitter ['제일', '타카', '판매'] Komoran ['제일', '타카', '판매'] Hannanum ['카', 'F422,판매합니'] 스투시 x 컨버스 콜라보 260 보라색 팝니다 Kkma ['스투', '스투시', '시', '버스', '콜라', '260', '색'] Twitter ['스', '투시', '컨', '버스', '콜라보', '보라색'] Komoran ['컨버스', '콜라보', '보라색'] Hannanum ['스투시', '컨버스', '콜라보', '260', '보라색', '팝니다'] [공식앱] 시원한 여름 원피스 Kkma ['공식', '공식앱', '앱', '여름', '원피스'] Twitter ['공식', '앱', '여름', '원피스'] Komoran ['공식', '앱', '여름', '원피스'] Hannanum ['[공식앱]', '시원', '여름', '원피스'] [모바일#]상태좋은 G5 최저가 판매!!!평택중고폰은 역시 모바일#!!! Kkma ['모바일', '상태', '5', '최저가', '판매', '평', '평택중고폰', '택', '중고', '폰'] Twitter ['모바일', '상태', '최저', '판매', '평택', '폰', '역시', '모바일'] Komoran ['모바일', '상태', 'G5', '최저', '판매', '평택중', '폰', '모바일'] Hannanum ['[모바일#]상태좋', 'G5', '최저', '판매', '평택중고폰', '모바일#'] ipTIME A1004ns 공유기 팝니다 Kkma ['1004', '공', '공유기', '유기'] Twitter ['공유기'] Komoran ['공유기'] Hannanum ['A1004ns', '공유', '팝니다'] 샌디라이온 스티커 Kkma ['디', '디라이온', '라이온', '스티커'] Twitter ['샌디', '라이온', '스티커'] Komoran ['샌디', '라이온', '스티커'] Hannanum ['샌디라이온', '스티커'] [급처]50종 명품 가방 지갑 새상품 정품 선물용으로도 추천 Kkma ['급', '급처', '처', '50', '50종', '종', '명품', '가방', '지갑', '새', '새상품', '상품', '정품', '선물', '추천'] Twitter ['급처', '종', '명품', '가방', '지갑', '새', '상품', '정품', '선물', '용', '추천'] Komoran ['급', '처', '종', '명품', '가방', '지갑', '상품', '정품', '선물', '추천'] Hannanum ['[급처]50종', '명품', '가방', '지갑', '새상품', '정품', '선물용', '추천'] 아이폰 ::업계최고단가 아이폰X 256 103만::로 삽니다! Kkma ['아이', '아이폰', '폰', '업계', '업계최고단가', '최고', '단가', '256', '103', '103만', '만'] Twitter ['아이폰', '업계', '최고', '단가', '아이폰', '만', '로'] Komoran ['아이폰', '업계', '최고', '단가', '아이폰'] Hannanum ['아이폰', '업계최고단', '아이폰X', '256', '103만::'] 전기바이크 전기스쿠터 전기오토바이 Kkma ['전기', '전기바이크', '바이크', '전기스쿠터', '스쿠터', '전기오토바이', '오토바이'] Twitter ['전기', '바이크', '전기', '스쿠터', '전기', '오토바이'] Komoran ['전기', '바이크', '전기', '스쿠터', '전기', '오토바이'] Hannanum ['전기바이크', '전기스쿠터', '전기오토바이'] 주물팬 불판 케이크틀19000택포 Kkma ['주물', '주물팬', '팬', '판', '케이크', '케이크틀19000택', '틀', '19000', '택', '포'] Twitter ['주물', '팬', '불판', '케이크', '틀', '택포'] Komoran ['주물', '팬', '판', '케이크', '틀', '택', '포'] Hannanum ['주물팬', '판', '케이크틀19000택포'] 베이코드 팝니다 Kkma ['베이', '베이코드', '코드'] Twitter ['베이', '코드'] Komoran ['베이', '코드'] Hannanum ['베이코드', '팝니다'] 휴고 무지개 썬캡 (키즈) Kkma ['무', '무지개', '지개', '캡', '키즈'] Twitter ['휴고', '무지개', '썬캡', '키즈'] Komoran ['휴고', '무지개', '썬', '캡', '키즈'] Hannanum ['휴', '무지개', '썬캡', '(키즈'] 갤럭시 탭A6 10.1 T585블랙 미개봉팝니다 Kkma ['럭', '럭시', '시', '탭', '6', '10.1', '585', '585블랙', '블랙', '미', '미개봉', '개봉'] Twitter ['갤럭시', '탭', '블랙', '개봉'] Komoran ['갤럭시 탭', 'A6', '블랙', '미', '개봉'] Hannanum ['갤럭시', '탭A6', '10.1', 'T585블랙', '미개봉팝니'] <<정품>>프라다 에스플러네이드 팝니다 !!! ((가방상태 최상급,급처분)) Kkma ['정품', '프라다', '스플', '스플러', '러', '이드', '팝', '가방', '가방상태', '상태', '최상급', '급', '급처분', '처분'] Twitter ['정품', '프라다', '에스', '러', '이드', '가방', '상태', '최상급', '급', '처분'] Komoran ['정품', '프라다', '에', '스프', '이', '드', '가방', '상태', '상급', '급', '처분'] Hannanum ['정품', '프라', '에스플러네이드', '가방상태', '최상급,급처분'] 소독연무기800w Kkma ['소독', '소독연무기800', '연', '무기', '800'] Twitter ['소독', '연', '무기'] Komoran ['소독', '연', '무기'] Hannanum ['소독연무기800w'] 워모 남성 점퍼,스컬리즘 바람막이100 Kkma ['워', '워모', '모', '남성', '점퍼', '스컬', '스컬리즘', '리', '즘', '바람', '바람막이', '바람막이100', '막이', '100'] Twitter ['워모', '남성', '점퍼', '스컬', '리즘', '바람막이'] Komoran ['남성', '점퍼', '스컬', '리', '즘', '바람막이'] Hannanum ['워모', '남성', '점퍼,스컬리즘', '바람막이100'] ◎◎◎◎◎◎◎ 각종 아이폰 삼성폰 전문적으로 매입합니다 삽니다◎◎◎◎◎◎ 서울 경기 수원 인천 아이폰6 6플러스 6 플러스 다 삽니다. 게신곳에서 매입합니다 Kkma ['각종', '아이', '아이폰', '폰', '삼성', '삼성폰', '전문적', '매입', '서울', '경기', '수원', '인천', '아이폰6', '6', '6플러스', '플러스', '곳'] Twitter ['각종', '아이폰', '삼성', '폰', '전문', '매입', '서울', '경기', '수원', '인천', '아이폰', '플러스', '플러스', '게신곳', '매입'] Komoran ['각종', '아이폰', '삼성', '폰', '전문', '매입', '서울', '경기', '수원', '인천', '아이폰', '플러스', '플러스', '게', '신', '곳', '매입'] Hannanum ['◎◎◎◎◎', '◎◎', '각종', '아이폰', '삼성폰', '전문적', '매입', '삽니다◎◎◎◎◎', '◎', '서울', '경기', '수원', '인천', '아이폰6', '6플러스', '6', '플러스', '게신곳', '매입'] 상태 좋은 코멧650r 2009년식 프라막 도색 판매합니다. Kkma ['상태', '코', '코멧650', '멧', '650', '2009', '2009년식', '년', '식', '프', '도색', '판매'] Twitter ['상태', '코멧', '년', '프라', '막', '도색', '판매'] Komoran ['상태', '년', '식', '도색', '판매'] Hannanum ['상태', '코멧650r', '2009년식', '프라막', '도색', '판매'] CO2 용접기 500A<현대HD AUTO500/새제품>140만원 Kkma ['co2', '용접기', '500', '현대', '새', '새제품', '제품', '140', '140만원', '만원'] Twitter ['용', '접기', '현대', '새', '제품', '만원'] Komoran ['CO2', '용접', '현대', '새', '제품', '원'] Hannanum ['CO2', '용접기', '500A<현대HD', 'AUTO500', '새제품', '140만원'] [공식앱] 쿠팡 / 넥슨 / 옥션 / 지마켓 / 위메프 / 문상 80% 구매합니다●항시거래가능● Kkma ['공식', '공식앱', '앱', '쿠팡', '넥', '옥', '옥션', '션', '지', '지마켓', '마켓', '위', '위메프', '메', '프', '문', '문상', '상', '80', '구매', '거래', '거래가능', '가능'] Twitter ['공식', '앱', '쿠팡', '넥슨', '옥션', '지마켓', '위메프', '문상', '구매', '항시', '거래', '가능'] Komoran ['공식', '앱', '쿠팡', '넥슨', '옥션', '지마켓', '위메프', '문상', '구매', '항시', '거래', '가능'] Hannanum ['[공식앱]', '쿠팡', '넥슨', '옥션', '지마켓', '위메프', '문상', '80', '구매합니다●항시거래가능●'] 질스튜어트 2018 신상품 플라워프린트 랩원피스 Kkma ['질', '질스튜어트', '스튜', '어트', '2018', '신상품', '플라워', '플라워프린트', '프린트', '랩', '랩원피스', '원피스'] Twitter ['질', '스튜어트', '신', '상품', '플라워', '프린트', '랩', '원피스'] Komoran ['질스튜어트', '신상품', '플라워', '프린트', '랩', '원피스'] Hannanum ['질스튜어트', '2018', '신상품', '플라워프린트', '랩원피스'] 구찌 스네이크 반지갑 팝니다 정품 풀구성 Kkma ['구찌', '스네이크', '반지', '반지갑', '갑', '정품', '풀', '풀구성', '구성'] Twitter ['구찌', '스네이크', '반', '지갑', '정품', '풀', '구성'] Komoran ['구찌', '지갑', '정품', '풀', '구성'] Hannanum ['구찌', '스네이크', '반지갑', '정품', '풀구성'] GTX260, 삼성 RAM 2GB 4GB 팝니다 Kkma ['260', '삼성', '2', '4'] Twitter ['삼성'] Komoran ['삼성'] Hannanum ['GTX260,', '삼성', '2GB', '4GB', '팝니다'] 인도네시아 커피루왁(Luwak) Kkma ['인도네시아', '커피', '왁'] Twitter ['인도네시아', '커피', '루왁'] Komoran ['인도네시아', '커피', '루왁'] Hannanum ['인도네시', '커피루왁'] 갤럭시s8 s급 풀구성 Kkma ['럭', '럭시', '시', '8', '급', '풀', '풀구성', '구성'] Twitter ['갤럭시', '급', '풀', '구성'] Komoran ['갤럭시', '급', '풀', '구성'] Hannanum ['갤럭시s8', '급', '풀구성'] 클리오 플리즘 에어 16코랄 Kkma ['리', '리오', '오', '플', '플리즘', '리', '즘', '에어', '16', '16코랄', '코', '랄'] Twitter ['클리오', '리즘', '에어', '코랄'] Komoran ['클리오', '플리', '즘', '에어', '코랄'] Hannanum ['리', '플리즘', '16코랄'] 대명 삼척쏠비치 (호텔) 슈페리어 트윈 바다전망 (6월 16일 체크인 1박) 양도 (오션뷰 확정) Kkma ['대명', '삼척', '비치', '호텔', '슈', '슈페리', '페리', '트윈', '바다', '바다전망', '전망', '6', '6월', '월', '16', '16일', '일', '체크인', '1', '1박', '박', '양도', '오션', '오션뷰', '뷰', '확정'] Twitter ['대명', '삼척', '쏠', '비치', '호텔', '슈', '페리', '어', '트윈', '바다', '전망', '월', '일', '체크', '박', '양도', '오션', '뷰', '확정'] Komoran ['대명', '삼척', '비치', '호텔', '바다', '전망', '6월 16일', '체크인', '박', '양도', '오션', '뷰', '확정'] Hannanum ['대명', '삼척쏠비치', '호텔', '슈페리어', '트윈', '바다전망', '6월', '16일', '체크인', '1박', '양', '(오션뷰', '확정'] 아디다스 져지 Kkma ['아디다스'] Twitter ['아디다스', '져지'] Komoran ['아디다스', '져지'] Hannanum ['아디다스', '져']","tags":"dev","url":"sample_of_konlpy.html"},{"title":"Build-slack-bot","text":"참고 현상 : slack의 메시지를 받은 후, 지정된 시간내에 바로 200 응답을 주지 않은면 slack에서 같은 메시지가 반복이 되어 전송이 된다. 대응 : 비동기적으로 메시지 처리를 위한 방법 마련(celery)","tags":"dev","url":"build-slack-bot.html"},{"title":"Playground jupyter with django","text":"Get ready for bokeh import pandas as pd import numpy as np import matplotlib.pyplot as plt from bokeh.plotting import figure , output_notebook , show from bokeh.layouts import column output_notebook () Necessary python packages ✗ pip install notebook pandas matplotlib bokeh","tags":"misc","url":"playground-jupyter-with-django.html"},{"title":"How to use group by in the django","text":"python의 datetime을 field로 가지는 데이타들을 날짜순(YYYY-MM-DD)으로 정렬하자. Approach 1 Room.objects.using('op-replica').values('step__code').annotate(cnt=Count('id')).order_by('step__code') Approach 2 User.objects.all().extra({\"day\": \"date(created_datetime)\"}).values(\"day\").annotate(count=Count(\"id\")).order_by('day')","tags":"misc","url":"how-to-use-group-by-in-the-django.html"},{"title":"Handle a lot of rows in Django model","text":"아래 함수 batch_qs_via_ids 의 첫번째 인자로 queryset 준다. 정해진 batch_size에 해당하는 길이만큼 나누어져 데이타를 처리할 수 있다. def batch_qs_via_ids ( qs , batch_size = 100 ): queryset = _get_queryset ( qs ) pk_name = queryset . model . _meta . pk . name ids = list ( queryset . values_list ( pk_name , flat = True ) . distinct ()) logger . info ( 'Snapshot of %s ids we will iterate over.' , len ( ids )) paginator = Paginator ( ids , batch_size ) for page_num in paginator . page_range : page = paginator . page ( page_num ) query = { ' %s __in' % pk_name : page . object_list } batch = queryset . filter ( ** query ) yield batch # Clear out the DB connections queries because it bloats up RAM. reset_queries ()","tags":"dev","url":"handle-a-lot-of-rows-in-django-model.html"},{"title":"Markdown mode for Emacs","text":"단축키 Emacs에서 Md 파일을 작성하기 위한 단축키는 아래의 경로에서 자세한 설명을 확인할 수 있다. https://github.com/defunkt/markdown-mode","tags":"dev","url":"markdown-mode-for-emacs.html"},{"title":"How to work smart","text":"Do 출근 한 시간전에 회사에 도착한다. 불가능한 업무는 용감하게 No라고 말한다. Don't 한번에 여러가지 일을 처리하자 조직이 알아야하는 것들을 나 혼자만 알자 (공통 이메일 계정, 시스템 전체적으로 영향을 미치는 변경) 업무가 할당이 되면 우선순위에 대한 고민없이 무조건 착수하자 중요한 일이 너무 많아서 일을 못한다. 야근을 열심히 하자. 옆 동료가 어떤 일을 하는지 항상 관심을 가지고 물어보기 전에 내 의견을 제시하자 소통에는 비용과 시간이 필요하니, 한 사람에게 업무과 결정권을 모두 맡도록 한다.","tags":"dev","url":"how-to-work-smart.html"},{"title":"Why I need to get XPS 15","text":"사야하는 이유 dell outlet 에서 저렴하게 팔고 있다. 가격대비 성능이 우수하다. 동영상 편집이 가능하다. Tensorflow가 지원하는 GPU를 가지고 있다. 말아야 하는 이유 정상적으로 잘 작동하는 labtop가 있다.","tags":"dev","url":"why-i-need-to-get-xps-15.html"},{"title":"What does the good blogs have in common?","text":"형식 구조가 명확하다. 그림을 포함한다. 링크를 포함한다. 간결하다. 예제) https://www.webpagefx.com/blog/web-design/ 내용 독창적이다. 블로그를 잘 하려면 따라하고픈 멘토를 찾자","tags":"dev","url":"what-does-the-good-blogs-have-in-common.html"},{"title":"How to run pelican","text":"local 환경에서 실시간 페이지 보기 $ fab serve markdown 변경파일을 실시간으로 html 형식으로 변경하기 $ fab rebuild github page에 적용하기 $ make github or fab gh_pages","tags":"dev","url":"how-to-run-pelican.html"},{"title":"Let's get it done","text":"그 동안 작동하는 프로젝트를 만들어 내지 못한 이유는? 전체적인 그림을 그리지 못했다. 실제 구현에 필요한 일부 기술에 부딪힐 때마다 그 기술을 익여햐 하겠다는 생각에 사로 잡혔다. 그리고 샛길로 빠져서 큰 맥락에서 벗어났다. 기술정리를 위한 정적 블로그 머신러닝 pandas 꾸준하게 개발에 대한 의지와 열정을 유지하지 못 했다. 그렇다면 작동하는 프로젝트를 완료하기 위한 나의 노력은 무엇인가? 그림을 그려보자. https://cloudcraft.co/app https://www.draw.io/ 새로운 기술을 만난 경우에 당장 그 기술은 공부해야할 필요가 있는지 우선순위를 고민한다. 가능한 전체적인 그림을 완료하려는 노력을 한다. 의지와 열정을 꾸준히 유지할수 있도록 진행상황을 출력해 둔다.","tags":"misc","url":"lets-get-it-done.html"},{"title":"microservice","text":"Mircoservice Monolithics 테스트 어려움 쉬움 디버깅 어려움 배포 단순 모니터링 중요 개발 문제에 집중해 개발 가능 유연함 언어 자유도 높음 독립성 높음 마이크로서비스 아키텍처의 장단점","tags":"dev","url":"microservice.html"},{"title":"자전거 사용추이","text":"서울 따릉이 서울 따릉이 하루 이용 그림(2mb)","tags":"dev","url":"bike_timeline.html"},{"title":"스마트 워크","text":"과정 -> 성과 시간 -> 업무 통일성 -> 다양성 철저한 계획(모든 상황의 변수를 통제) -> 빠른 적응 지시, 관리 -> 믿음, 지원","tags":"세바시","url":"smart-work.html"},{"title":"생각이 바뀌어야 삶이 바뀐다","text":"앎의 연대, 집단 지성, 발표 체험 - 관객 체험 약자가 하고 싶은게 있다? 권리가 있다? 질문을 받으면 생각을 하기 시작한다. 입체적 사고 HAPPINESS IS NOW HERE 생각을 내려놓고 감각에 집중하자. 도파민 vs 스트레스 호르몬 행복 순간적인 즐거움이 아니라 지속적인 만족감이다.","tags":"세바시","url":"life-change-only-if-you-think-different.html"},{"title":"66일 습관의 기적 | 강성태 공신닷컴 대표","text":"\"공부를 게임처럼 만들자\"","tags":"세바시","url":"66-days-of-habit.html"},{"title":"관점 그리고 생각시작","text":". \"창업자와 직원의 비전은 다를 수 있다\" \"작은 꿈을 이룰 수 있어야 큰 꿈을 이룰수 있지 않을까\" - 김봉진 \"틀린 질문을 하면 맞는 답이 나오지 않는다\" The one thing 크리스토프 로담 향수 개발자 가치는 해석에 의해 결정된다. \"기술을 팔지말고 기술이 바꿀 미래를 팔아라\" 당신은 언제 행복해질 예정이야? 한가지말에서 만가지 생각을 한다 익숙한것에 대해 다시 질문하라 인생에 대해서 중요한 단어 5개를 찾고 정의하자 Connect & Development 재해석 당연하지 않았던 것들이 당연해지면서 세상은 바뀐다 지금은 당연하지 않지만 미래에 당연해질 일을 찾는 것 같은걸 다르게 보는 힘 생각하는 대로 살지 않으면 사는 대로 생각하게 될 것이다. - Paul bourget 통찰, 관심, 질문, 관점, 관찰, 정의","tags":"세바시","url":"관점 그리고 생각시작.html"},{"title":"믿지말라 그리고 질문하라","text":"송길영 다음소프트 부사장 각 시대별 인기 직업 무엇을 포기해야 하는가? 지식의 유효기간 관심의 유효기간 믿지말라 그리고 질문하라","tags":"misc","url":"각 시대별 인기 직업.html"},{"title":"thought","text":"","tags":"misc","url":"thought.html"},{"title":"내마음의 구심점","text":"가능하면 빨리 실패하라. 실수를 빨리파악하고 인정하는 것이 자신에게 유리하다 성공에 남다른 비결이 있는 게 아니라 모두 다 아는 지혜를 실천하기에 달린 것이다. 파도를 아닌 파도를 만드는 바람을 보는 세상의 눈이 필요하다. 문제를 쫓아 다니면 문제만 쫓아 다닌다. 근본적인 원인을 생각하라. 승리는 우리를 흥분시킨다. 하지만 1등을 하지 못했다고 부끄러워할 필요는 절대 없다. 무엇보다 중요한 것은 시도해보는 것이다. [34] - 리차드 브렌슨 나는 가슴이 이끄는 대로 살고, 새로운 것에 도전하며, 상상한 것을 실현한다. 내 꿈과 열정에 솔직한 것, 그것이 내 삶이고 경영이다. - 리처드 브랜슨 내가 하면 안 되는 올바르고 타당한 이유들은 많았다. 반면에 도전해보겠다고 하는 데는 오직 한 가지 이유밖에 없었다. 도전의 유혹이 너무나 달콤해서 뿌리칠 수 없다는 것뿐이었다.[59] - 리차드 브렌슨 어떤 일이 더이상 재미가 없어질 때가 바로 일을 바꿔야 할 시기다. 불행하게 살기에는 인생은 너무 짧다. - 리차드 브렌슨 1) 보여주기 위한 삶이 아닌 내 자신의 삶을 살 걸 2) 일을 좀 덜 할 걸 3) 내 감정에 솔직할 걸 4) 옛 친구들을 지킬 걸 5) 좀 더 행복하게 살 걸 - 죽으면서 하는 가장 흔한 후회 5가지 기다리는 일이 사랑하는 일보다 더 고통스러울 때가 있다. 하지만 그것을 극복하지 못하는 사랑을 어찌 진정한 사랑이라고 말할 수 있으랴. - 이외수 작은 일도 무시하지 않고 최선을 다해야 한다. 작은 일에도 최선을 다하면 정성스럽게 된다. 정성스럽게 되면 겉에 배어 나오고 겉에 배어 나오면 겉으로 드러나고 겉으로 드러나면 이내 밝아지고 밝아지면 남을 감동시키고 남을 감동시키면 이내 변하게 되고 변하면 생육된다. 그러니 오직 세상에서 지극히 정성을 다하는 사람만이 나와 세상을 변하게 할 수 있는 것이다. - 중용","tags":"문장","url":"quotes.html"},{"title":"면접자로서 면접시에 물어보고 싶은 질문들","text":"대략적인 질문 개발 방법론(scrum?) 업무 시간, 출퇴근 시간 개발 pc 지급? 휴가 비전 계획 업무적인 질문 인력 구성 구체적인 업무 기대하는 역할 기술적인 질문 기술적 어려움 주언어 작업관리툴(jira) 코드리뷰 TDD CI 소통 채널 배포 주기 운용환경 AWS - 동료상 선호 비선호","tags":"misc","url":"myeonjeobjaroseo-myeonjeobsie-muleobogo-sipeun-jilmundeul.html"},{"title":"따릉이 사용량","text":"파랑 - 실제 주차장에 주차되어있는 수","tags":"dev","url":"my-super-post.html"},{"title":"Elasticbeans talk","text":"Elasticbeanstalk health check EB에서는 Health check 하는 기능을 기본적으로 포함하고 있다. 이것을 위해서는 Django에서 health check 요청을 허락하는 설정이 필요하다. Route53에서 설정된 Domain으로 요청은 한다고 잘못생각해서 오랫동안 고민했다. https://gist.github.com/dryan/8271687 try : EC2_IP = requests . get ( 'http://169.254.169.254/latest/meta-data/local-ipv4' ). text ALLOWED_HOSTS . append ( EC2_IP ) except requests . exceptions . RequestException : pass 해결 : 위의 설정은 settings.py에 추가하자 헤더에 Authorization 값 전달이 기본 설정이 아니다. request에 호함된 모든 헤더값(사용자 토큰값)이 서버에 자동으로 전달이 되는 것이 기본인줄 알았는데, 그렇지 않더라. [wsgi_enabled_pass.config] container_commands: 01_wsgipass: command: 'echo \"WSGIPassAuthorization On\" >> ../wsgi.conf' http://mattharris.org/2015/11/30/setting-aws-elasticbeanstalk-environment-wsgi-authorization/","tags":"misc","url":"elasticbeans-talk.html"},{"title":"data.go.kr","text":"단독/다가구 전월세 지수 변화, 2004~2016 link 지역코드와 기간을 이용하여 해당기간, 해당지역의 단독다가구 전월세 신고자료를 제공하는 단독다가구 전월세 신고 정보 조회 이력 소개 link","tags":"misc","url":"datagokr.html"},{"title":"Experience","text":"Backend developer at Modn, 2017.07 Backend developer at Modernlab, 2017.04 ~ 2017.07 Backend developer at Truffls, 2016.03 ~ 2016.09 https://truffls.de/en/ Django admin에 신규 기능 추가후 소개, Truffls 직원 기념 사진, Truffls QA Engineer at Delivery, 2015.06 ~ 2016.03 https://www.lieferheld.de/ Tech Friday, 매주 금요일 오후에 각 부서의 기술 공유시간, Delivery Hero 날이 너무 좋아서 야외 Sprint meeting, Delivery Hero 유럽 구경 Leipzig, Germany Backend python developer at Yogiyo, 2013.03 ~ 2015.06 https://www.yogiyo.co.kr/mobile/ 주간 모임, Yogiyo 개발팀 발표(Den), Yogiyo Agile 교육 시간, Yogiyo 동료들과 봄나들이, Yogiyo Software Engineer at Wind river, 2012.03 ~ 2013.02 Software Engineer at Posco ICT, 2008.02 ~ 2011.04 Intern at Ewastecenter, 2006.06 ~ 2007.07","tags":"dev","url":"experience.html"},{"title":"aws cloudtrail and config","text":"AWS Config Rules, 서울 리전 출시! https://aws.amazon.com/ko/blogs/korea/category/aws-config 임기성 :: 2015 리인벤트 리캡 게이밍 https://www.slideshare.net/awskorea/20151118-reinvent-recap-for-gaming-3-security-on-aws-waf-aws-inspector-config-rules-gisung-lim AWS Summit Seoul 2016 https://www.slideshare.net/awskorea/agile-security-operational-strategy-leveraging-advanced-security-services-of-aws-gisung-lim","tags":"misc","url":"aws-cloudtrail-and-config.html"},{"title":"rds-parameter-group","text":"문제 postgres에 SELECT 문장을 요청할 경우 발생, 일반적인 요청은 문제가 없으나 order by 이후에 들어오는 컬럼이 한글값을 가진 경우가 문제. 정렬이 되는 듯하나 유심히 순서를 확인해보면 맞지가 않다. 그래서 구글링해보니 같은 문제를 겪은 사람들이 있었다. - postgresql 에서 한글 정렬 문제 해결하기 https://ansuchan.com/postgresql-korean-order/ PostgreSQL 한글 정렬 http://tech.jinto.pe.kr/165 해결책 해결책은 다행히도 간단하다. db 생성시에 LC_COLLATE 'C' 옵션을 주면 되는 것. 단 이미 사용중인 db인 경우는 재생성해야 하는 번거로움이 있다. postgres의 한글 정렬 https://jupiny.com/2016/12/12/sort-korean-in-postgresql/ 아래는 rds에서 collate 값을 변경이 필요한 경우","tags":"misc","url":"rds-parameter-group.html"},{"title":"git tips","text":"특정 함수의 변경을 확인 : git log -L merge시 conflict가 발생하면, merge 시도 이전으로 되돌릴 수 있다. : git merge --abort 버그가 발견한 commit를 추적 : git bisect commit.template","tags":"misc","url":"git-tips.html"},{"title":"글을 매일 쓰는 방법","text":"25 Habits That Will Make You a Writer 다문다독다상량(多聞多讀多商量, 많이 듣고 많이 읽고 많이 생각하라) 다독다작다상량(多讀多作多商量, 많이 읽고 많이 쓰고 많이 생각하라) 매일 글을 쓴다. 하루를 보내며 재미있었던 일","tags":"misc","url":"geuleul-maeil-sseuneun-bangbeob.html"},{"title":"AWS와 친구 되기","text":"아테나 성능 튜닝 팁 - 정도현 Amazon Athena is an interactive query service that makes it easy to analyze data stored in Amazon S3 using standard SQL - big-data https://aws.amazon.com/ko/blogs/big-data/ - Top 10 Performance Tuning Tips for Amazon Athena https://aws.amazon.com/ko/blogs/big-data/top-10-performance-tuning-tips-for-amazon-athena/ - Introduction to Amazon Athena https://www.slideshare.net/AmazonWebServices/introduction-to-amazon-athena 웨비나 https://aws.amazon.com/ko/about-aws/events/ https://aws.amazon.com/ko/answers/ https://aws.amazon.com/ko/this-is-my-architecture/ Aws public data set https://aws.amazon.com/ko/public-datasets/ https://aws.amazon.com/ko/1000genomes/ AWS Korea User Group (AWSKRUG) https://www.meetup.com/awskrug/","tags":"misc","url":"awswa-cingu-doegi.html"},{"title":"소담에서의 시작","text":"소감 낯설지만 자유롭다. 이변이 없는한 같은 사무실 같은 자리에서 출근과 동시에 퇴근할 때까지 같은 곳에 머무르던 기존 직장과 달리, 여기 소담은 매일 같은 장소에서 일하기는 어렵다. 커피숍 자리를 이용하기 때문에 누군가 어제 내가 머물렀던 자리를 먼저 점령했다면 다를 의자를 알아봐야 한다. 익숙함을 거부하고 새로움을 쫓아 다녔던 나지만, 막상 갑작스럽고 엄청난 자유를 코앞에서 만나고 나니 그저 기쁘지만은 않다. 다른 사람자리를 사용한다는 불편한 느낌이랄까. 근무환경 장소 : 경희대 앞 LEFT COOFFEE, Cow and Dog 요일 : 수,목,금,토,일 시간 : 11:00~20:00 프로젝트 환경 Backend : Django Frontend : NG2","tags":"misc","url":"sodameseoyi-sijag.html"},{"title":"init sodam","text":"upgrade pip pip3 install -U pip 가상환경 mkvirtualenv sodam -p /usr/bin/python3","tags":"misc","url":"init-sodam.html"},{"title":"build a chat app with django","text":"기능 요구사항 1:1 대화를 주고 받는 웹 어플리케이션을 작성해주시길 바랍니다. http://rocketchat.healworld.co.kr/ 화면은 이미지를 참고로 하여 작성해주시길 바랍니다. (화면의 모든 기능이 꼭 존재할 필요는 없습니다.) 링크는 깨짐(404) 대략적인 위치는 기억하여 진행함(좌측 대화방, 오른쪽 대화 목록) https://dl.dropboxusercontent.com/u/4338652/mini_project.png 대화 상대별로 대화방이 나뉘어 있으며, 각 대화방끼리 이동할 수 있어야 합니다. 구현 성공 메시지를 전송하고 서로 이 내용을 확인할 수 있어야 합니다. 구현 성공 대화는 서버에 저장되어 언제든 확인할 수 있어야 합니다. 구현 성공 http://rocketchat-backend.healworld.co.kr/admin/ user:[rocket], password:[chat] Django 또는 Flask로 작성해 주시길 바랍니다. Django==1.10.6 Github, Bitbucket 등 접속 가능한 Git Remote Repository로 전달 바랍니다. Backend : https://github.com/harry81/rocketchat Frontend : https://github.com/harry81/rocketchat-web 구조도 : https://goo.gl/7k5LUD 진행 2017-3-20 ws4redis에서는 [users, groups, sessions, broadcast] 와 같은 대상으로만 메시지를 보낼 수 있다. 이번 구현의 목적에 맞게 대화방을 바탕으로 사용자가 가입/발행(subscribe/publish) 할 수 있도록 구현 작업 결과 마무리 및 문서화 2017-3-19 사용자가 대화방을 변경한 경우 그에 해당하는 대화 목록이 노출되도록 변경 2017-3-18 그룹별 메시지 전송하기 그룹별 메시지 보여주기 2017-3-17 EC2 인스턴스 설정 완료(Nginx + uWsgi) Frontend, Backend 구성 완료 Deploy script 준비 완료 APIs /api-message/ chat.views.MessageAPIView api-message-list /api-message/<pk>/ chat.views.MessageAPIView api-message-detail /api-room/ chat.views.RoomAPIView api-room-list /api-room/<pk>/ chat.views.RoomAPIView api-room-detail 2017-3-16 AWS에서 소켓 사용의 어려움2 AWS 에서 socket server 설정이 생각보다 알아야 할 제품 관련 지식이 많다. 즉 언어와 프레임웍 관련 내용이라기 보다는 AWS에서 제공하는 제품군의 사용과 설정에 대한 내용들이다. 아마존에서 web socket를 지원하나 이 기능을 위해서는 Classic Load Balancer 대신 Amazon Load Balancer으로 설정이 필요하다. Amazon Load Balancer ---- Target Group ---- Instance 생각보다 금방 마무리 될 줄 알았던 socket server 설정작업이 파면팔수록 걸리는 문제들이 많았으나, 이 방법밖에는 떠오르지 않아 3일 정도의 시간을 투자했다. 결국은 AWS 생태계를 더 헤아리지 않고서는 어렵다고 판단했다. EB 대신 별도의 인스턴스를 만들어 Nginx와 uWsgi로 설정하기로 결정 방향 전환 -> Elasticbeanstalk with Amazon Load Balancer ---> EC2 with Nginx and uWsgi 2017-3-15 AWS에서 소켓 사용의 어려움 ELB 대신 ALB 사용 필요 이유 - http://stackoverflow.com/a/39491033/1118583 설치 - https://blog.mangoforbreakfast.com/2017/02/13/django-channels-on-aws-elastic-beanstalk-using-an-alb/ 2017-3-14 실행 환경 세팅 및 브라우져에서 비동기 테스트 Elasticbeanstalk, RDS, Route 53, ELB shell plus에서 redis queue에 아래와 같은 형식으로 메시지 통신 확인 from ws4redis.publisher import RedisPublisher from ws4redis.redis_store import RedisMessage ... message = RedisMessage ( json . dumps ( msg )) redis_publisher . publish_message ( message ) 2017-3-13 django에서 chat을 하기 위한 기술 및 패키지 확인 https://github.com/stephenmcd/django-socketio github star 4개라서 기쁜 마음으로 테스트 해 보았으나, 패키지간 버젼 의존성 문제로 일단 다른 패키지 물색 https://github.com/jrief/django-websocket-redis https://channels.readthedocs.io/en/stable/ Packages http://django-websocket-redis.readthedocs.io/en/latest/ https://github.com/stephenmcd/django-socketio https://github.com/jrief/django-websocket-redis/tree/master/ws4redis https://github.com/ottoyiu/django-cors-headers https://github.com/angular/angular https://github.com/afrad/angular2-websocket 오류 및 해결 django-scoketio 설치후 문제 ``` python [linenos:false] Django==1.10 django-socketio==0.3.9 File \"/home/harry/.virt_env/rocketpunch/local/lib/python2.7/site-packages/django_socketio/urls.py\", line 1, in from django.conf.urls import patterns, url ImportError: cannot import name patterns #### 해결 #### ``` python requirements.txt -e git+https://github.com/stephenmcd/django-socketio.git#egg=django-socketio 문제 로컬에서 ws4redis를 이용하여 메시지를 주고 받는 것에는 문제가 없었으나 AWS상에서는 아래와 같은 소켓 통신에 문제가 발생 WebSocket connection to 'ws://rocketpunch-app.tdirjp8mny.ap-northeast-2.elasticbeanstalk.com/ws/chat?subscribe-broadcast&publish-broadcast' failed: Error during WebSocket handshake: Unexpected response code: 404 ... app.component.ts:41 Error: undefined angular2-websocket.js:52 WebSocket connection to 'ws://rocketpunch-app.tdirjp8mny.ap-northeast-2.elasticbeanstalk.com/ws/chat?subscribe-broadcast&publish-broadcast' failed: Error during WebSocket handshake: Unexpected response code: 504 ... app.component.ts:41 Error: undefined 해결 Amazon Load Balance with Elastic Beanstalk https://blog.mangoforbreakfast.com/2017/02/13/django-channels-on-aws-elastic-beanstalk-using-an-alb/ 문제 you need to build uWSGI with SSL support to use the websocket handshake api function !!! Other Exception: unable to complete websocket handshake Traceback (most recent call last): File \"/home/ubuntu/virtualenvs/app/local/lib/python2.7/site-packages/ws4redis/wsgi_server.py\", line 101, in __call__ websocket = self.upgrade_websocket(environ, start_response) File \"/home/ubuntu/virtualenvs/app/local/lib/python2.7/site-packages/ws4redis/uwsgi_runserver.py\", line 52, in upgrade_websocket uwsgi.websocket_handshake(environ['HTTP_SEC_WEBSOCKET_KEY'], environ.get('HTTP_ORIGIN', '')) IOError: unable to complete websocket handshake Starting late response on websocket Finish non-websocket response with status code: 500 해결 Recompile uwsgi with support openssl 문제 사용자가 request를 서버에 요청했을 때, ``` text nginx error log 2017/03/17 03:29:44 [error] 17644#17644: 2 upstream prematurely closed connection while reading response header from upstream, client: 172.31.4.186, server: rocketchat.healworld.co.kr, request: \"GET / HTTP/1.1\", upstream: \"uwsgi://unix:///tmp/uwsgi.sock:\", host: \"rocketchatalb.healworld.co.kr\" 2017/03/17 03:29:45 [error] 17644#17644: 2 upstream prematurely closed connection while reading response header from upstream, client: 172.31.4.186, server: rocketchat.healworld.co.kr, request: \"GET /favicon.ico HTTP/1.1\", upstream: \"uwsgi://unix:///tmp/uwsgi.sock:\", host: \"rocketchatalb.healworld.co.kr\", referrer: \"http://rocketchatalb.healworld.co.kr/\" #### 문제 #### local에서는 문제없이 시작 페이지가 열리나, `ng build` 이후 서버에서는 아래와 같은 오류발생하며 angular가 아무런 내용도 보여주지 않는다. Uncaught (in promise): Error: DI Error / Unhandled Promise rejection: No provider for t! ; Zone: angular ; Task: Promise.then #### 해결 #### https :// github . com / salemdar / angular2-cookie / issues / 37 #### 해결 #### > Installing the python plugin for uwsgi with apt-get install uwsgi-plugin-python and adding plugins = python to the individual uwsgi app config solved this problem for me on Ubuntu 11 . 10 when using upstart . http :// stackoverflow . com / questions / 10748108 / nginx-uwsgi-unavailable-modifier-requested-0 ------------------------------------------------------------------------------- 설정 ---- ``` text / etc / nginx / sites-available / rocketchat upstream django { server unix : /// tmp / uwsgi . sock ; } upstream ws { server unix : /// tmp / ws . sock ; } server { listen 80 ; server_name rocketchat.healworld.co.kr rocketchatalb.healworld.co.kr ; index / ; location / { include uwsgi_params ; uwsgi_pass django ; } location / ws / { proxy_pass http : // unix :/ tmp / ws . sock ; proxy_http_version 1.1 ; proxy_set_header Upgrade $http_upgrade ; proxy_set_header Connection \"upgrade\" ; } } sudo service nginx restart ``` text uwsgi config for django app [uwsgi] chdir = /home/ubuntu/app module = main.wsgi home = /home/ubuntu/virtualenvs/app/ master = true processes = 2 socket = /tmp/uwsgi.sock chmod-socket = 666 vacuum = true `uwsgi --ini uwsgi.ini` ``` text uwsgi config for socket [uwsgi] chdir = /home/ubuntu/app module = main.wsgi_websocket home = /home/ubuntu/virtualenvs/app/ master = true processes = 100 http-socket = /tmp/ws.sock chmod-socket = 666 vacuum = true uwsgi --ini ws.ini static web page # 버킷 생성 aws s3 mb s3://rocketchat.healworld.co.kr/ --profile pointer --region ap-northeast-2 # 버킷을 website 가능하게 변경 aws s3 website s3://rocketchat.healworld.co.kr/ --index-document index.html --error-document error.html --profile pointer --region ap-northeast-2 # static files 업로드 aws s3 sync dist s3://rocketchat.healworld.co.kr/ --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers --profile pointer --region ap-northeast-2 배포 fab deploy","tags":"misc","url":"build-a-chat-app-with-django.html"},{"title":"index gs shop","text":"도전 GS SHOP의 방송편성표를 보여주는 웹 페이지를 작성 관련 기술 Elasticsearch 플러그인 , 형태소 분석기 , Thrift 서버 , HAProxy 형태소 분석이 필요한 이유? 한국어 분석을 지원하지 않는다. 예를 들어 \"아버지가 방에 들어간다\"라는 한국어 문장을 인덱스해도 \"아버지\"로는 검색이 안 되고, 반드시 \"아버지가\"로 검색해야만 결과에 출력된다. 형태소 분석기 - 은전 한 잎(mecab-ko) 설치 외부에서 접근 가능한 환경을 구현하기 위해서 AWS를 이용하기로 했다. Amazon Elasticsearch Service search-buzzni-xusbuesxyq6c33zkupvvvmjof4.ap-northeast-2.es.amazonaws.com' ``` python 연결확인 from datetime import datetime from elasticsearch import Elasticsearch host = 'search-buzzni-xusbuesxyq6c33zkupvvvmjof4.ap-northeast-2.es.amazonaws.com' es = Elasticsearch([{'host': host,'port':80}]) print es.cluster.health()['status'] es.indices.create(index='my-index', ignore=400) es.index(index=\"my-index\", doc_type=\"test-type\", id=42, body={\"any\": \"data\", \"timestamp\": datetime.now()}) es.get(index=\"my-index\", doc_type=\"test-type\", id=42)['_source'] ### 해야 할 일 ### * 크롤링 * `http://www.gsshop.com` 각 아이템의 세부 페이지 구하기 * 세부 페이지에 방문해 제품에 대한 구체적인 정보 얻기 `` ` python 추후에 celery task에서 크롤링할 때 사용될 코드 # -*- coding: utf-8 -*- import requests from lxml import etree home_url = 'http://www.gsshop.com' def get_product ( prod_url ): url = \" %s%s \" % ( home_url , prod_url ) if 'http' in prod_url : url = prod_url return print url ele_response = requests . get ( url ) tree = etree . HTML ( ele_response . content ) price = tree . xpath ( \"//span[contains(@class,'price-definition-ins')]/ins/strong\" )[ 0 ] . text title = tree . xpath ( \"//p[contains(@class,'product-title')]/text()\" )[ 0 ] # DOTO : 그외에 정보 추후 고려 def get_list_of_product (): list_url = \" %s%s \" % ( home_url , '/tv/tvScheduleMain.gs' ) response = requests . get ( list_url ) prod_urls = [] tree = etree . HTML ( response . content ) for ele in tree . xpath ( \"//tr/td/div[contains(@class, 'tdWrap')]/a\" ): if len ( ele . text . strip ()): prod_url = ele . xpath ( '@href' )[ 0 ] prod_urls . append ( prod_url ) for url in prod_urls : print get_product ( url ) 데이타 인덱스 - 위에서 얻어진 정보를 ES에 인덱싱하여 저장 형태소 분석 - ES에서 한글은 지원하지 않는다고 하므로 별도의 형태소 분석기 필요 주기적으로 GS SHOP 페이지 정보 얻어오기(Celery) 형태서 분석기 설치 AWS에서 제공하는 Elasticsearch에 직접 한글 형태소 분석기를 직접 설치 할 수 있는 방법은 찾지 못했다. 따라서 별도의 EC2 인스턴스를 만들어 그 인스턴스와 Elasticsearch가 통신할 수 있으면 같은 효과를 얻을 수 있다고 생각하였다. MECAB-KO 형태소 분석기 엔진 cd / tmp / wget https : // bitbucket . org / eunjeon / mecab - ko / downloads / mecab - 0.996 - ko - 0.9 . 2. tar . gz tar - xvzf mecab - 0.996 - ko - 0.9 . 2. tar . gz cd mecab - 0.996 - ko - 0.9 . 2 ./ configure make make check sudo make install MECAB-KO-DIC 사전(DICTIONARY) 파일 cd / tmp / wget https : // bitbucket . org / eunjeon / mecab - ko - dic / downloads / mecab - ko - dic - 1.6 . 1 - 20140814. tar . gz tar - xvzf ./ mecab - ko - dic - 1.6 . 1 - 20140814. tar . gz cd mecab - ko - dic - 1.6 . 1 - 20140814 ./ autogen . sh ./ configure make sudo make install /usr/local/libexec/mecab/mecab-dict-index: error while loading shared libraries: libmecab.so.2: cannot open shared object file: no such file or directory sudo ldconfig grep /usr/local/lib configure : error : Your compiler is not powerful enough to compile MeCab . sudo yum install gcc - c ++ MECAB-KO 형태소 분석기와 MECAB-KO-DIC 사전파일 확인 mecab -d /usr/local/lib/mecab/dic/mecab-ko-dic LIBMECAB.SO, MECAB.JAR 설치 cd /tmp/ wget https://bitbucket.org/eunjeon/mecab-java/downloads/mecab-java-0.996.tar.gz tar -xvzf mecab-java-0.996.tar.gz cd mecab-java-0.996 vi Makefile sudo cp libMeCab.so /usr/local/lib sudo cp MeCab.jar /usr/local/lib sudo chown -R $(whoami):$(whoami) /usr/local/lib/libMeCab.so sudo chown -R $(whoami):$(whoami) /usr/local/lib/MeCab.jar sudo chown -R $(whoami):$(whoami) /usr/local/lib/*mecab* export JAVA_HOME=/usr/java/jdk1.8.0_60/ sudo ln -s $JAVA_HOME/include/linux/jni_md.h $JAVA_HOME/include/jni_md.h sudo ln -s $JAVA_HOME/include/linux/jawt_md.h $JAVA_HOME/include/jawt_md.h cd /tmp wget https://bitbucket.org/eunjeon/mecab-ko-lucene-analyzer/downloads/elasticsearch-analysis-mecab-ko-0.16.1.zip export ES=/usr/share/elasticsearch/ $ES/bin/plugin --install analysis-mecab-ko-0.16.1 --url file:///tmp/elasticsearch-analysis-mecab-ko-0.16.1.zip 결론 한글 형태의 text를 ES에 인덱싱하여 텍스트 풀서치를 하는 아주 일반적인 환경을 구축하는 요구사항이었다. 외부에서 접근 가능한 형태를 위해 AWS ES를 선택했는데, 한글 형태소 분석을 위해서 별도의 모듈을 설치해야만 했다. 다행히 Python에서 ES를 제어하기 위한 활성화된 패키지(https://github.com/elastic/elasticsearch-py)가 있어 기능 구현을 위해서 큰 어려움이 없을 것 같았다. 하지만 그러한 환경 구축에 경험이 없어서 대부분의 시간을 설치를 하는데 소비하였다. 결국은 요구한 미션을 마무리하지 못했다. 그 이유는 ES에서 plugin을 어떤식으로 제어하고 활용하는 방법에 대한 이해 부족 전반적인 패키지 구성에 대한 경험이 없어 많은 시간을 소비 형태소 분석기 설치 문서가 있지만, 조금 시간이 지나서 그런지 지금 버전과 맞지 않아 설치에 애를 먹음 배움 AWS ES 설치는 생각보다 어렵지 않았다. 은전한잎(mecab-ko)의 도움으로 형태소 분석이 가능하며, ES를 활용할 수 있다. 참고 elasticsearch로 로그 검색 시스템 만들기 http://d2.naver.com/helloworld/273788 ELASTICSEARCH 한글 형태소 분석기(ANALYZER) 비교 http://guruble.com/?p=437 엘라스틱서치(elasticsearch)에 한글 형태소 분석기 은전한잎(eunjeon) 적용하기 - http://blog.nacyot.com/articles/2015-06-13-eunjeon-with-elasticsearch/ 관계형 데이터베이스 elasticsearch Database Index Table Type Row Document Column Field Schema Mapping Index Everything is indexed SQL Query DSL","tags":"misc","url":"index-gs-shop.html"},{"title":"senior work","text":"참고 사이트 구미 노일 일자리 창출센터 http://www.gumisilver.or.kr/job/job_psn.asp","tags":"misc","url":"senior-work.html"},{"title":"get title data api","text":"기본 matplotlib 이용하여 데이타 출력 # -*- coding: utf-8 -*- % matplotlib inline import pandas as pd from pandas import Series , DataFrame import matplotlib import numpy as np import matplotlib.pyplot as plt # 한글 폰트 깨짐 방지 krfont = { 'family' : 'nanumgothic' , 'weight' : 'bold' , 'size' : 10 } matplotlib . rc ( 'font' , ** krfont ) df = pd . read_csv ( 'open-api.csv' , sep = ',' ) df . groupby ( by = 'category' ) . count ()[ 'read' ] . plot ( figsize = ( 15 , 5 ), kind = 'bar' ) bokeh를 이용한 데이타 출력 from bokeh.plotting import figure , show from bokeh.io import push_notebook , show , output_notebook from bokeh.charts import Bar , Line output_notebook () tooltips = [ ( 'read' , '@y' ) ] box_plot = Bar ( df , label = [ 'category' ], values = 'download' , bar_width = 0.4 , agg = 'count' , title = 'data.go.kr 분류별 총합' , tooltips = tooltips , legend = False ) show ( box_plot ) handle yahoo data from pandas_datareader import data as web , wb from bokeh.charts import Line plot = figure ( width = 500 , height = 150 ) plot . line ( price ) show ( plot ) https://github.com/wesm/pydata-book","tags":"misc","url":"get-title-data-api.html"},{"title":"uhopper-hadoop-docker","text":"docker-compose 를 이용해서 https://bitbucket.org/uhopper/hadoop-docker/ git clone https://bitbucket.org/uhopper/hadoop-docker.git docker network create hadoop docker network create kafka docker volume create --name=hadoop_datanode1 docker volume create --name=hadoop_datanode2 docker volume create --name=hadoop_historyserver docker volume create --name=hadoop_namenode docker-compose up","tags":"misc","url":"uhopper-hadoop-docker.html"},{"title":"spark docker 설치해보기","text":"Apache Spark is an open-source cluster-computing framework https://github.com/sequenceiq/docker-spark create virtualbox docker-machine create -d virtualbox spark docker-machine create -d virtualbox namenode docker-machine create -d virtualbox datanode1 name node https://github.com/sequenceiq/hadoop-docker # run docker hadoop docker-machine start namenode; eval \"$(docker-machine env namenode)\"; # 이미지 다운로드 docker pull sequenceiq/hadoop-docker:2.7.1 # 실행 docker run -it -p 50070:50070 -p 8088:8088 sequenceiq/hadoop-docker:2.7.1 /etc/bootstrap.sh -bash data node # run docker hadoop docker-machine start datanode1; eval \"$(docker-machine env datanode1)\"; # 이미지 다운로드 docker pull sequenceiq/hadoop-docker:2.7.1 # 실행 docker run -it -p 50070:50070 -p 8088:8088 sequenceiq/hadoop-docker:2.7.1 /etc/bootstrap.sh -bash spark https://github.com/sequenceiq/docker-spark # run docker spark docker-machine start spark; eval \"$(docker-machine env spark)\"; # bash docker run -it -p 8088:8088 -p 8042:8042 -p 4040:4040 -h sandbox sequenceiq/spark:1.6.0 bash port components 50070 HDFS NameNode 50050 HDFS DataNode 50090 HDFS Secondary NameNode 8088 YARN Resource Manager 4042 YARN Node Manager 4040","tags":"dev","url":"spark-docker-seolcihaebogi.html"},{"title":"python-recsys","text":"python-recsys 따라하기 http://ocelma.net/software/python-recsys/build/html/quickstart.html ratings.csv 다운받는다 ```python 사용자의 입력 모델화 하여 파일로 저장 import recsys.algorithm recsys.algorithm.VERBOSE = True from recsys.algorithm.factorize import SVD svd = SVD() svd.load_data(filename='data/ml-20m/ratings.csv', sep=',', format={'col':0, 'row':1, 'value':2, 'ids': int}) k = 100 svd.compute(k=k, min_values=10, pre_normalize=None, mean_center=True, post_normalize=True, savefile='/tmp/movielens') 역시나 책대로 되지는 않는다. 위의 7번째 라인이 약 3시간 30분을 잡아먹었는데, 결국은 아래와 같이 `MemoryError' 오류를 뱉어내버리고야 말았다. 아무래도 실행머신이 고급 성능을 가지지 않은 개인용 노트북이라고 결론을 짓기로 한다. ``` bash /home/harry/.virt_env/recommends/lib/python2.7/site-packages/divisi2/sparse.pyc in squish(self, cutoff) 1005 for (val, row, col) in entries 1006 if row in rows and col in cols] -> 1007 return SparseMatrix.from_named_entries(newentries).squish() 1008 1009 # adds compatibility with SciPy-based methods /home/harry/.virt_env/recommends/lib/python2.7/site-packages/divisi2/sparse.pyc in from_named_entries(tuples) 418 If possible, use ``from_named_lists``, because it's faster. 419 \"\"\" --> 420 lists = zip(*tuples) 421 if not lists: return SparseMatrix((0,0)) 422 return SparseMatrix.from_named_lists(*lists) MemoryError: python 파일로 저장된 모델을 객체로 읽어들인다 from recsys.algorithm.factorize import SVD svd2 = SVD(filename='/tmp/movielens') # Loading already computed SVD model ITEMID1 = 1 # Toy Story (1995) ITEMID2 = 2355 # A bug's life (1998) svd2.similarity(ITEMID1, ITEMID2)","tags":"dev","url":"python-recsys.html"},{"title":"movies","text":"날짜 제목 2017.2.19 글래디에이터: 로마 영웅 탄생의 필수 가이드 비밀 예정 분야 제목 경제 인사이드잡 경제 마진콜 역사 인생은 아름다워(La Vita E Bella, Life Is Beautiful 1997) 역사 프랑스 혁명 SF 스타워즈","tags":"misc","url":"movies.html"},{"title":"emacs에서 파일명 변경하기","text":"C-x C-q and(파일명 편집) C-c C-C dired","tags":"misc","url":"emacseseo-pailmyeong-byeongyeonghagi.html"},{"title":"hadoop-docker","text":"가상머신 3개를 준비하자. # Namenode 192.168.99.101 docker-machine start namenode; eval \"$(docker-machine env namenode)\"; # Datanode1 192.168.99.102 docker-machine start datanode1; eval \"$(docker-machine env datanode1)\"; # Datanode2 192.168.99.103 docker-machine start datanode2; eval \"$(docker-machine env datanode2)\"; ... namenode 192.168.99.101 datanode1 192.168.99.102 datanode2 192.168.99.103 각각의 가상머신에서 아래 명령어를 실행하여 필요한 hadoop 데몬을 실행하다. # run hadoop-docker docker run -it -p 50070:50070 -p 8088:8088 sequenceiq/hadoop-docker /etc/bootstrap.sh -bash","tags":"misc","url":"hadoop-docker.html"},{"title":"CeleryTestSuiteRunner NoseTestSuiteRunner 함께 사용하기","text":"소프트웨어 관리에 있어서 테스트는 언제나 필수적인 과정이지만, 번고롭다. 특히 매번 테스트를 실행할 때마다 db 스키마를 생성(CREATE)하고, 기존에 정의해둔 fixture를 입력(INSERT)하는 과정을 거친다. 테스트 환경을 일관되도록 유지를 시켜준다는 장점이 있지만, 시간이 걸린다는 단점이 있다. 시간을 가지고 생각을 해보면, db scheme에 관련된 테스트 목적이 아니라면 때에 따라서 기존에 생성해둔 db를 그대로 이용하는 것도 똑똑한 선택일수 있다. 다행히 nose에서 이런 기능을 도와주는데, 방법은 환경변수 REUSE_DB의 값을 1로 설정하는 것이다. # settings.py TEST_RUNNER = 'django_nose.NoseTestSuiteRunner' # 실행 REUSE_DB = 1 python manage . py test -- settings = main . settings_test - v 2 하지만 celery 비동기 task를 테스트 하는중 문제를 발견했다. 비동기 작업을 테스트중 실시간 결과를 확인하는 것이 아니라, Queue에 작업 요청을 한후 그대로 테스트는 종료된다. 이렇게 되면 원했던 기능확인을 할수 없게된다. 다시 검색을 해 본결과 TEST_RUNNER를 CeleryTestSuiteRunner 를 사용하라는 내용을 찾았다. 그 지시 그대로 따랐던 결과 NoseTestSuiteRunner' 의 장점은 사라졌다. TEST_RUNNER = 'djcelery.contrib.test_runner.CeleryTestSuiteRunner' 또 다시 고민하여 검색결과 아래와 같이 두 Test Runner의 기능을 모두 사용할수 있는 코드를 찾게되었다. Link from django_nose import NoseTestSuiteRunner from djcelery.contrib.test_runner import CeleryTestSuiteRunner class TestRunner ( CeleryTestSuiteRunner , NoseTestSuiteRunner ): pass # settings.py TEST_RUNNER = 'myapp.TestRunnser\"\"","tags":"dev","url":"celerytestsuiterunner-nosetestsuiterunner-hamgge-sayonghagi.html"},{"title":"지식 창고","text":"예정 날짜 제목 지은이 특이사항 돈 되는 아파트 돈 안 되는 아파트 채상욱 아기곰 재테크의 불변의 법칙 아기곰 뉴스테이시대, 사야할 집 팔아야할 집 채상욱 아파트 제대로 고르는 법 심형석 부자 경제학 박경철 경제기사의 바다에 빠져라 최진기 2017. 관점 디자이너 박용후 2017.2 마지막 한 걸음은 혼자서 가야 한다 :정진홍의 900킬로미터 2017.3 (만화) 비트겐슈타인 철학적 탐구 난이도 상 완료 날짜 제목 2017.2. 글 쓸 줄 아는 사람이 되라 : 호모 스크리벤스 2017.2 .28 (만화) 뉴턴 프린키피아. 27 2017.2.23 승려와 수수께끼 2017.2 파이썬 머신러닝 :최신 예측 분석 기반으로 깊은 통찰력을 얻는 머신러닝 필수 가이드 2017.2.22 나의 고전 읽기 : 우리 시대 최고의 지성10인이 말하는 나의 인생과 고전 2017.2.17 인공지능과 딥러닝 : 인공지능이 불러올 산업 구조의 변화와 혁신 2017.2 하둡 프로그래밍 :빅데이터 분석을 위한 하둡 기초부터 YARN까지 2017.2.16 (만화)슘페터 자본주의 사회주의 민주주의 2017.2.16 린 스타트업 2017.2.13 나는 왜 괜찮은 아이디어가 없을까? :혁신적인 아이디어로 무장한 세계 1%들의 창의적 습관 2017.2.11 인생을 바꾸는 기적의 블로그 2017.2.9 (만화) 중용 2017.2.9 (만화) 간디 자서전 2017.2.3 (만화) 마키아벨리 군주론 2017.2.1 (만화)노자 도덕경 2017.2.2 조훈현, 고수의 생각법 : 생각은 반드시 답을 찾는다 2017.1.31 백년을 살아보니 : 인생의 황금기는 60~75세 2017.1.25 배민다움 : 배달의민족 브랜딩 이야기 2017.1.25 (세계를 움직인 CEO들의)발상과 역발상 ---","tags":"misc","url":"jisig-canggo.html"},{"title":"docker를 이용한 hadoop","text":"categories: hadoop docker 동기 하둡의 병렬처리 특성을 확인하기 위해서는 2대 이상의 물리적인 컴퓨터가 필요하다 실제로 물리적인 컴퓨터를 마련하기 위해서는 비용이 필요하다 docker를 이용하면 가상의 운영체제를 가볍게 실행할수 있다는 얘기를 들어왔고, hadoop를 테스트하기에 적당하다고 판단하여 시도함 하둡 docker 이미지를 받자 Apache Hadoop 2.7.1 Docker image 하둡 실행하기 docker run -it -p 50070:50070 sequenceiq/hadoop-docker /etc/bootstrap.sh -bash 하둡 정보를 웹UI로 확인하기 docker-machine 명령어를 이용해 다커이미지를 실행하는 머신의 ip를 구한다 $ docker-machine env hoodpub export DOCKER_TLS_VERIFY = \"1\" export DOCKER_HOST = \"tcp://192.168.99.100:2376\" export DOCKER_CERT_PATH = \"/home/harry/.docker/machine/machines/hoodpub\" export DOCKER_MACHINE_NAME = \"hoodpub\" # Run this command to configure your shell: # # eval \"$(docker-machine env hoodpub)\" # DOCKER_HOST 가 가진 값이 가상머신의 ip이므로 이 값을 기억하자. http://192.168.99.100:50070","tags":"misc","url":"dockerreul-iyonghan-hadoop.html"},{"title":"Octopress 테마를 변경하자","text":"https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes cd octopress git submodule add GIT_URL .themes/THEME_NAME rake install\\['THEME_NAME'\\] rake generate","tags":"misc","url":"octopress-temareul-byeongyeonghaja.html"},{"title":"Celery beat를 Elasticbeanstalk에서도 사용하자","text":"tip 1 {% codeblock lang:python title:\"타스크를 모두 비우자\" mark:3 %} from celery.task.control import discard_all discard_all() Elasticbeanstalk 에서 실행을 위한 명령어 {% codeblock lang:python title:\"98-celery.config\" %} command=/opt/python/run/venv/bin/celery beat -A main -S djcelery.schedulers.DatabaseScheduler --pidfile= celery beat 를 실행하면 celery worker 와 비슷한 task의 로그가 나타날 것으로 기대를 했다. 'Interval'과 'Crontab'으로 시간을 조정하며 결과를 확인해 보았으나 아래와 같은 기본적인 로그만이 나타났다 $ python manage.py celery beat -A main -S djcelery.schedulers.DatabaseScheduler --loglevel = DEBUG celery beat v3.1.17 ( Cipater ) is starting. DEBUG 2017 -02-13 16 :19:33,691 base 29568 139948070696768 Configuring Raven for host: <raven.conf.remote.RemoteConfig object at 0x7f481f84af50> __ - ... __ - _ Configuration -> . broker -> amqp://guest:**@localhost:5672// . loader -> celery.loaders.app.AppLoader . scheduler -> djcelery.schedulers.DatabaseScheduler . logfile -> [ stderr ] @%DEBUG . maxinterval -> now ( 0s ) [ 2017 -02-13 16 :19:33,880: DEBUG/MainProcess ] DatabaseScheduler: intial read [ 2017 -02-13 16 :19:33,880: INFO/MainProcess ] Writing entries... [ 2017 -02-13 16 :19:33,890: DEBUG/MainProcess ] DatabaseScheduler: Fetching database schedule [ 2017 -02-13 16 :19:33,902: DEBUG/MainProcess ] Current schedule: <ModelEntry: celery.backend_cleanup celery.backend_cleanup ( * [] , ** {}) { 4 } > <ModelEntry: core.tasks.scraper_example core.tasks.scraper_example ( * [] , ** {}) { 4 } > <ModelEntry: t1 core.tasks.test ( * [] , ** {}) { 4 } > [ 2017 -02-13 16 :19:33,931: INFO/MainProcess ] DatabaseScheduler: Schedule changed. [ 2017 -02-13 16 :19:33,931: INFO/MainProcess ] Writing entries... [ 2017 -02-13 16 :19:33,931: DEBUG/MainProcess ] DatabaseScheduler: Fetching database schedule [ 2017 -02-13 16 :19:33,936: DEBUG/MainProcess ] Current schedule: <ModelEntry: celery.backend_cleanup celery.backend_cleanup ( * [] , ** {}) { 4 } > <ModelEntry: core.tasks.scraper_example core.tasks.scraper_example ( * [] , ** {}) { 4 } > <ModelEntry: t1 core.tasks.test ( * [] , ** {}) { 4 } > [ 2017 -02-13 16 :19:33,952: INFO/MainProcess ] Writing entries... 여러 시행착오를 거친결과 beat 는 worker 에게 정해진 시간만 알려주는 역할만 한다는 것을 알았다. 그리고 실제 작업은 work 가 책임진다. 작업 확인을 위해서는 beat 와 worker 동시에 실행을 하자. python manage.py celery worker -A main --loglevel=DEBUG python manage.py celery beat -A main -S djcelery.schedulers.DatabaseScheduler --loglevel=DEBUG","tags":"misc","url":"celery-beatreul-elasticbeanstalkeseodo-sayonghaja.html"},{"title":"대구 개발자 모임-하둡","text":"모임 장소 : 아이원 유학스터디룸 일자 : 2017년 2월 11 slack : https://daegugroup.slack.com/ 느낀 점 고향 근처에서 개발에 관심있으신 분들과 만날 수 있어 기쁘다. 하둡 분야의 전무가가 없었지만, 함께 고민하고 답을 찾는 과정들이 의미있게 느껴졌다. 옆에 계셨던 분이 아래 책의 저자라는 사실을 집에 오며 알게 되었다. 쉽고 빠르게 배우는 Angular 2 프로그래밍","tags":"misc","url":"daegu-gaebalja-moim-hadub.html"},{"title":"힐월드 기능정리","text":"현재 위치 반경내 검색 댓글 작성시에 문자로 전송정리 세부 페이지에서 '전화걸기' 버튼으로 등록자에게 전화걸기 물건 등록자와 나와의 위치 간단히 확인하기 {% img /images/main_healworld.png %} https://www.healworld.co.kr","tags":"misc","url":"hilweoldeu-gineungjeongri.html"},{"title":"아이디어 창고","text":"신문요약 동기 설명 여러 매체의 신문은 내용이 많아 읽는데 시간이 걸린다. 카테고리별로 각 신문사별로 중요하다고 생각되는 토픽을 찾는다. 선별된 내용중 사실만 선별해 내어 짥은 문장으로 정리하여 서비스 한다. 재미요소 신문을 읽을 수 있는 시간 절약 균현있게 세상 돌아가는 흐름을 볼 수 있다 Open toilet 동기 낯선 곳에서는 화장실을 찾는 다는 것은 쉽지 않다. 생리적으로 시급한 상황이다. 설명 https://www.data.go.kr 에서 제공하는 지역별 화장실 데이타를 시작한다. 모바일 사용자의 현재 위치를 기준으로 주변 화장실을 보여준다. 재미요소 와이파이 가용여부를 사용자들이 기록하게 하자. 발전계획 제안자 : 현민 장비창고 동기 포크레인 인력의 수요와 공급이 온라인으로 투명하게 관리되고 있지 않다. 숨어있는 O2O 변화가 될 수 있다. 설명 포크레인으로 작업할 수 있는 인력을 확보한다. 포크레인 인력이 필요한 업체를 확보한다. 수요와 공급을 손쉽게 연결시켜줄 앱을 개발한다. 편리요소 노동력을 제공할 인력이 일일이 업체에 전화로 작업 유무를 확인할 필요없다. 많은 노력인력이 등록이 되어 있을 수록 이른 시간에 작업을 시작할 수 있다. 발전계획 제안자 : 호성","tags":"misc","url":"aidieo-canggo.html"},{"title":"healworld 방문 그래프","text":"","tags":"misc","url":"healworld-bangmun-geuraepeu.html"},{"title":"mp4-mp3","text":"우분투용용의 avconv 이용 ``` bash 형식 avconv -i [영상파일] -vn [소리파일] ``` bash 예시 avconv -i Into.the.Wild.2007.1080p.BluRay.x264.YIFY.mp4 -vn Into.the.Wild.2007.1080p.BluRay.x264.YIFY.mp3","tags":"dev","url":"mp4-mp3.html"},{"title":"touchpad는 오른손 잡이로, mouse는 왼손 잡이로 설정하기","text":"ubuntu에서 touchpad는 오른손 잡이로, mouse는 왼손 잡이로 설정하기 우분투 설정에서 mouse는 왼손 잡이로 설정 아래 명령어를 이용하여 마우스 버튼 배치만 변경 xinput set-button-map 'Logitech USB Optical Mouse' 3 2 1","tags":"misc","url":"touchpadneun-oreunson-jabiro-mouseneun-oenson-jabiro-seoljeonghagi.html"}]}